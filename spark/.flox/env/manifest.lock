{
  "lockfile-version": 1,
  "manifest": {
    "version": 1,
    "install": {
      "bat": {
        "pkg-path": "bat"
      },
      "coreutils": {
        "pkg-path": "coreutils"
      },
      "curl": {
        "pkg-path": "curl"
      },
      "gawk": {
        "pkg-path": "gawk"
      },
      "gnused": {
        "pkg-path": "gnused"
      },
      "gum": {
        "pkg-path": "gum"
      },
      "jdk": {
        "pkg-path": "jdk"
      },
      "pip": {
        "pkg-path": "python312Packages.pip"
      },
      "spark": {
        "pkg-path": "spark"
      }
    },
    "hook": {
      "on-activate": "# fetches reconfigure.sh from github\nfetch_reconfigure_sh() {\n    local scripts_dir=\"$FLOX_ENV_CACHE/shell-scripts\"\n    local script_path=\"$scripts_dir/reconfigure.sh\"\n    local script_url=\"https://raw.githubusercontent.com/barstoolbluz/floxenvs/main/spark/.flox/cache/shell-scripts/reconfigure.sh\"\n    \n    mkdir -p \"$scripts_dir\"\n    \n    if [ ! -f \"$script_path\" ]; then\n        echo \"Downloading reconfigure.sh script...\"\n        curl -s -o \"$script_path\" \"$script_url\"\n        chmod +x \"$script_path\"\n        echo \"Download complete.\"\n    fi\n}\n\n# sets up the spark environment configuration\nbootstrap_spark() {\n    clear\n    \n    gum style \\\n        --border rounded \\\n        --border-foreground 240 \\\n        --padding \"1 2\" \\\n        --margin \"1 0\" \\\n        --width 70 \\\n        \"$(gum style --foreground 27 --bold 'Apache Spark Configuration')\n        \n$(gum style --foreground 240 'First-time setup for your Apache Spark cluster')\"\n    \n    # sets defaults\n    DEFAULT_SPARK_MODE=\"master\"\n    DEFAULT_SPARK_HOST=\"localhost\"\n    DEFAULT_SPARK_PORT=\"7077\"\n    DEFAULT_SPARK_WEBUI_PORT=\"8080\"\n    DEFAULT_SPARK_WORKER_CORES=\"2\"\n    DEFAULT_SPARK_WORKER_MEMORY=\"2g\"\n    DEFAULT_SPARK_DATA_DIR=\"${FLOX_ENV_CACHE}/spark-data\"\n    DEFAULT_SPARK_LOG_DIR=\"${FLOX_ENV_CACHE}/spark-logs\"\n    \n    # creates dirs\n    mkdir -p \"$DEFAULT_SPARK_DATA_DIR\" >/dev/null 2>&1\n    mkdir -p \"$DEFAULT_SPARK_LOG_DIR\" >/dev/null 2>&1\n    \n    echo \"\"\n    if gum confirm \"$(gum style --foreground 240 'Would you like to customize your Spark configuration?')\" --default=false; then\n        echo \"$(gum style --foreground 240 'Press Enter to accept the default values shown in [brackets]')\"\n        echo \"\"\n        \n        SPARK_MODE=$(gum choose --header \"Select Spark node type:\" \"master\" \"worker\")\n        \n        if [ \"$SPARK_MODE\" = \"master\" ]; then\n            SPARK_HOST=$(gum input --placeholder \"[${DEFAULT_SPARK_HOST}]\" --value \"$DEFAULT_SPARK_HOST\" --prompt \"Hostname/IP: \")\n            SPARK_PORT=$(gum input --placeholder \"[${DEFAULT_SPARK_PORT}]\" --value \"$DEFAULT_SPARK_PORT\" --prompt \"Port: \")\n            SPARK_WEBUI_PORT=$(gum input --placeholder \"[${DEFAULT_SPARK_WEBUI_PORT}]\" --value \"$DEFAULT_SPARK_WEBUI_PORT\" --prompt \"Web UI Port: \")\n            \n            # builds the master's url\n            SPARK_MASTER_URL=\"spark://$SPARK_HOST:$SPARK_PORT\"\n        else\n            SPARK_HOST=\"worker\"\n            SPARK_PORT=\"\"\n            SPARK_WEBUI_PORT=\"\"\n            SPARK_MASTER_URL=$(gum input --placeholder \"spark://host:port\" --prompt \"Master URL: \")\n            SPARK_WORKER_CORES=$(gum input --placeholder \"[${DEFAULT_SPARK_WORKER_CORES}]\" --value \"$DEFAULT_SPARK_WORKER_CORES\" --prompt \"Worker Cores: \")\n            SPARK_WORKER_MEMORY=$(gum input --placeholder \"[${DEFAULT_SPARK_WORKER_MEMORY}]\" --value \"$DEFAULT_SPARK_WORKER_MEMORY\" --prompt \"Worker Memory: \")\n        fi\n        \n        if gum confirm \"Use default directories for Spark data and logs?\" --default=true; then\n            SPARK_DATA_DIR=\"$DEFAULT_SPARK_DATA_DIR\"\n            SPARK_LOG_DIR=\"$DEFAULT_SPARK_LOG_DIR\"\n        else\n            SPARK_DATA_DIR=$(gum input --placeholder \"[${DEFAULT_SPARK_DATA_DIR}]\" --value \"$DEFAULT_SPARK_DATA_DIR\" --prompt \"Spark Data Directory: \")\n            SPARK_LOG_DIR=$(gum input --placeholder \"[${DEFAULT_SPARK_LOG_DIR}]\" --value \"$DEFAULT_SPARK_LOG_DIR\" --prompt \"Spark Log Directory: \")\n            \n            # creates custom directories if not exist\n            mkdir -p \"$SPARK_DATA_DIR\" >/dev/null 2>&1\n            mkdir -p \"$SPARK_LOG_DIR\" >/dev/null 2>&1\n        fi\n    else\n        echo \"$(gum style --foreground 240 'Using default configuration:')\"\n        \n        # defaults to master mode in the non-interactive path\n        SPARK_MODE=\"$DEFAULT_SPARK_MODE\"\n        SPARK_HOST=\"$DEFAULT_SPARK_HOST\"\n        SPARK_PORT=\"$DEFAULT_SPARK_PORT\"\n        SPARK_WEBUI_PORT=\"$DEFAULT_SPARK_WEBUI_PORT\"\n        SPARK_MASTER_URL=\"spark://$SPARK_HOST:$SPARK_PORT\"\n        SPARK_WORKER_CORES=\"$DEFAULT_SPARK_WORKER_CORES\"\n        SPARK_WORKER_MEMORY=\"$DEFAULT_SPARK_WORKER_MEMORY\"\n        SPARK_DATA_DIR=\"$DEFAULT_SPARK_DATA_DIR\"\n        SPARK_LOG_DIR=\"$DEFAULT_SPARK_LOG_DIR\"\n        \n        echo \"$(gum style --foreground 240 \"  Mode: ${SPARK_MODE}\")\"\n        echo \"$(gum style --foreground 240 \"  Host: ${SPARK_HOST}\")\"\n        echo \"$(gum style --foreground 240 \"  Port: ${SPARK_PORT}\")\"\n        echo \"$(gum style --foreground 240 \"  Web UI Port: ${SPARK_WEBUI_PORT}\")\"\n        echo \"$(gum style --foreground 240 \"  Master URL: ${SPARK_MASTER_URL}\")\"\n        echo \"$(gum style --foreground 240 \"  Data Directory: ${SPARK_DATA_DIR}\")\"\n        echo \"$(gum style --foreground 240 \"  Log Directory: ${SPARK_LOG_DIR}\")\"\n        echo \"\"\n    fi\n    \n    # determines network configuration\n    echo \"\"\n    echo \"$(gum style --foreground 240 'Configuring network settings:')\"\n    \n    # gets the nodes ip address as first non-loopback address\n    DETECTED_IP=$(hostname -I | awk '{print $1}')\n    \n    if [ \"$SPARK_MODE\" = \"master\" ]; then\n        # asks does user want to use the detected IP? specify a different ip?\n        echo \"$(gum style --foreground 240 \"Detected IP address: ${DETECTED_IP}\")\"\n        if gum confirm \"$(gum style --foreground 240 'Use this IP address for advertising the Spark master?')\" --default=true; then\n            SPARK_ADVERTISE_IP=\"$DETECTED_IP\"\n        else\n            SPARK_ADVERTISE_IP=$(gum input --placeholder \"[${DETECTED_IP}]\" --value \"$DETECTED_IP\" --prompt \"Advertise IP: \")\n        fi\n        \n        # sets the local binding ip\n        SPARK_LOCAL_IP=\"0.0.0.0\"  # Bind to all interfaces\n        \n        # updates the master's url to use the advertised ip\n        SPARK_MASTER_URL=\"spark://$SPARK_ADVERTISE_IP:$SPARK_PORT\"\n    else\n        # sets ip settings for worker mode\n        SPARK_LOCAL_IP=\"$DETECTED_IP\"\n        SPARK_ADVERTISE_IP=\"$SPARK_LOCAL_IP\"\n    fi\n    \n    # saves config\n    cat > \"$FLOX_ENV_CACHE/spark_config.sh\" << EOF\n# sets the spark config generated by bootstrapping\nSPARK_MODE=\"$SPARK_MODE\"\nSPARK_HOST=\"$SPARK_HOST\"\nSPARK_PORT=\"$SPARK_PORT\"\nSPARK_WEBUI_PORT=\"$SPARK_WEBUI_PORT\"\nSPARK_WORKER_CORES=\"$SPARK_WORKER_CORES\"\nSPARK_WORKER_MEMORY=\"$SPARK_WORKER_MEMORY\"\nSPARK_MASTER_URL=\"$SPARK_MASTER_URL\"\nSPARK_LOG_DIR=\"$SPARK_LOG_DIR\"\nSPARK_WORKER_DIR=\"$SPARK_DATA_DIR\"\nSPARK_LOCAL_IP=\"$SPARK_LOCAL_IP\"\nSPARK_ADVERTISE_IP=\"$SPARK_ADVERTISE_IP\"\nEOF\n\n    # exports env vars for the current session\n    export SPARK_HOME=\"$(dirname $(which spark-submit))/..\"\n    export SPARK_LOG_DIR=\"$SPARK_LOG_DIR\"\n    export SPARK_WORKER_DIR=\"$SPARK_DATA_DIR\"\n    export SPARK_MODE=\"$SPARK_MODE\"\n    export SPARK_HOST=\"$SPARK_HOST\"\n    export SPARK_PORT=\"$SPARK_PORT\"\n    export SPARK_WEBUI_PORT=\"$SPARK_WEBUI_PORT\"\n    export SPARK_WORKER_CORES=\"$SPARK_WORKER_CORES\"\n    export SPARK_WORKER_MEMORY=\"$SPARK_WORKER_MEMORY\"\n    export SPARK_MASTER_URL=\"$SPARK_MASTER_URL\"\n    export SPARK_LOCAL_IP=\"$SPARK_LOCAL_IP\"\n    export SPARK_ADVERTISE_IP=\"$SPARK_ADVERTISE_IP\"\n    \n    echo \"\"\n    echo \"$(gum style --foreground 34 --bold \"âœ“ Spark configuration saved!\")\"\n    echo \"$(gum style --foreground 212 \"You can now start Spark with: flox services start\")\"\n}\n\n# sets up env vars from the config file\nsetup_spark_env() {\n    if [ -f \"$FLOX_ENV_CACHE/spark_config.sh\" ]; then\n        source \"$FLOX_ENV_CACHE/spark_config.sh\"\n        \n        export SPARK_MODE\n        export SPARK_HOST\n        export SPARK_PORT\n        export SPARK_WEBUI_PORT\n        export SPARK_WORKER_CORES\n        export SPARK_WORKER_MEMORY\n        export SPARK_MASTER_URL\n        export SPARK_LOG_DIR\n        export SPARK_WORKER_DIR\n        export SPARK_LOCAL_IP\n        export SPARK_ADVERTISE_IP\n        \n        # sets extra env vars\n        export SPARK_HOME=\"$(dirname $(which spark-submit))/..\"\n        export SPARK_CONF_DIR=\"$FLOX_ENV_CACHE\"\n        \n        # sets master-specific env vars if in master mode\n        if [ \"$SPARK_MODE\" = \"master\" ]; then\n            export SPARK_MASTER_HOST=\"$SPARK_ADVERTISE_IP\"\n            export SPARK_MASTER_PORT=\"$SPARK_PORT\"\n            export SPARK_MASTER_WEBUI_PORT=\"$SPARK_WEBUI_PORT\"\n        fi\n        \n        # tries to find JAVA_HOME if not already set\n        if [ -z \"$JAVA_HOME\" ]; then\n            export JAVA_HOME=\"$(dirname $(dirname $(which java)))\"\n        fi\n    fi\n}\n\n# shows help message\nshow_spark_help() {\n    # gets current spark master and workers if available\n    local spark_master_status=\"Not running\"\n    local spark_workers=\"None\"\n    \n    if [ -f \"$FLOX_ENV_CACHE/spark_config.sh\" ]; then\n        # checks is master running?\n        if [ \"$SPARK_MODE\" = \"master\" ] && pgrep -f \"org.apache.spark.deploy.master.Master\" > /dev/null; then\n            spark_master_status=\"Running at $SPARK_MASTER_URL\"\n        elif [ \"$SPARK_MODE\" = \"worker\" ]; then\n            spark_master_status=\"Configured to connect to $SPARK_MASTER_URL\"\n        fi\n        \n        # if master, checks for connected workers\n        if [ \"$SPARK_MODE\" = \"master\" ] && command -v curl > /dev/null; then\n            local connected_workers=$(curl -s \"http://$SPARK_ADVERTISE_IP:$SPARK_WEBUI_PORT/json/\" 2>/dev/null | jq '.workers | length' 2>/dev/null)\n            if [ ! -z \"$connected_workers\" ] && [ \"$connected_workers\" != \"null\" ]; then\n                spark_workers=\"$connected_workers workers connected\"\n            fi\n        fi\n    fi\n\n    # builds environment details section dynamically\n    local env_details=\"    Spark Mode:      $(gum style --foreground 212 \"${SPARK_MODE:-Not configured}\")\\n    Spark Master:    $(gum style --foreground 212 \"${spark_master_status}\")\"\n    \n    # if master, adds connected workers info\n    if [ \"$SPARK_MODE\" = \"master\" ]; then\n        env_details+=\"\\n    Workers:         $(gum style --foreground 212 \"${spark_workers}\")\"\n    fi\n    \n    env_details+=\"\\n    Data Directory:  $(gum style --foreground 212 \"$FLOX_ENV_CACHE/spark-data\")\\n    Network Bind:    $(gum style --foreground 212 \"${SPARK_LOCAL_IP:-Not configured}\")\\n    Advertised As:   $(gum style --foreground 212 \"${SPARK_ADVERTISE_IP:-Not configured}\")\"\n\n    gum style \\\n        --border rounded \\\n        --border-foreground 240 \\\n        --padding \"1 2\" \\\n        --margin \"1 0\" \\\n        --width 96 \\\n        \"$(gum style --foreground 141 --bold 'This is a  F l o x  Apache Spark Environment')\n\nðŸ‘‰  Configure Spark:\n    $(gum style --foreground 212 'bootstrap')                          Interactive Spark configuration wizard\n    $(gum style --foreground 212 'flox services')                      Manage Spark services\n\nðŸ‘‰  Spark Commands:\n    $(gum style --foreground 212 'spark-shell')                        Interactive Scala shell for Spark\n    $(gum style --foreground 212 'pyspark')                            Interactive Python shell for Spark\n    $(gum style --foreground 212 'spark-submit')                       Submit a Spark application\n\nðŸ‘‰  Cluster Management:\n    $(gum style --foreground 212 'flox services start')                Start all Spark services\n    $(gum style --foreground 212 'flox services stop')                 Stop all Spark services\n    $(gum style --foreground 212 'flox services status')               Check Spark services status\n    \nðŸ‘‰  Environment Details:\n$(echo -e \"$env_details\")\"\n\n    echo \"\"\n}\n\n# bootstrap function\nbootstrap() {\n    bootstrap_spark\n}\n\n# checks if spark config exists; if not, prompts to run bootstrap\nif [ ! -f \"$FLOX_ENV_CACHE/spark_config.sh\" ]; then\n    gum style --foreground 212 --bold \"No Spark configuration detected. Let's set one up!\"\n    bootstrap_spark\nelse\n    # sources spark config and sets up env vars\n    setup_spark_env\nfi\n\nfetch_reconfigure_sh\nshow_spark_help\n"
    },
    "profile": {
      "bash": "reconfigure() {\n  [ -f \"${FLOX_ENV_CACHE}/shell-scripts/reconfigure.sh\" ] && bash \"${FLOX_ENV_CACHE}/shell-scripts/reconfigure.sh\"\n}\n",
      "zsh": "reconfigure() {\n  [ -f \"${FLOX_ENV_CACHE}/shell-scripts/reconfigure.sh\" ] && bash \"${FLOX_ENV_CACHE}/shell-scripts/reconfigure.sh\"\n}\n",
      "fish": "function reconfigure\n  test -f \"$FLOX_ENV_CACHE/shell-scripts/reconfigure.sh\" && bash \"$FLOX_ENV_CACHE/shell-scripts/reconfigure.sh\"\nend\n"
    },
    "options": {
      "systems": [
        "aarch64-linux",
        "x86_64-linux"
      ]
    },
    "services": {
      "spark": {
        "command": "mkdir -p \"$SPARK_LOG_DIR\"\nmkdir -p \"$SPARK_WORKER_DIR\"\n\nenv | grep SPARK > \"$SPARK_LOG_DIR/env-vars.log\"\n\nif [ \"$SPARK_MODE\" = \"master\" ]; then\n    # forces spark master to advertise itself with the IP address instead of hostname\n    export SPARK_MASTER_HOST=\"$SPARK_ADVERTISE_IP\"\n    export SPARK_MASTER_PORT=\"$SPARK_PORT\"\n    export SPARK_MASTER_WEBUI_PORT=\"$SPARK_WEBUI_PORT\"\n    export SPARK_LOCAL_IP=\"$SPARK_LOCAL_IP\"\n    \n    # unsets vars that might cause hostname-based advertising\n    unset SPARK_LOCAL_HOSTNAME\n    unset SPARK_PUBLIC_DNS\n    \n    echo \"Starting Spark master at $SPARK_MASTER_URL (advertising as $SPARK_ADVERTISE_IP)\" >> \"$SPARK_LOG_DIR/startup.log\"\n    cd \"$SPARK_HOME\" && \"./sbin/start-master.sh\"\nelif [ \"$SPARK_MODE\" = \"worker\" ] && [ ! -z \"$SPARK_MASTER_URL\" ]; then\n    # sets worker specific vars\n    export SPARK_LOCAL_IP=\"$SPARK_LOCAL_IP\"\n    export SPARK_WORKER_CORES=\"$SPARK_WORKER_CORES\"\n    export SPARK_WORKER_MEMORY=\"$SPARK_WORKER_MEMORY\"\n    \n    # unsets vars that might cause hostname-based advertising\n    unset SPARK_LOCAL_HOSTNAME\n    unset SPARK_PUBLIC_DNS\n    \n    echo \"Starting Spark worker at $SPARK_LOCAL_IP connecting to $SPARK_MASTER_URL\" >> \"$SPARK_LOG_DIR/startup.log\" \n    cd \"$SPARK_HOME\" && \"./sbin/start-worker.sh\" \"$SPARK_MASTER_URL\"\nelse\n    echo \"ERROR: Invalid configuration. SPARK_MODE=$SPARK_MODE, SPARK_MASTER_URL=$SPARK_MASTER_URL\" >> \"$SPARK_LOG_DIR/startup.log\"\n    exit 1\nfi\n\n# keeps the service running\ntail -f /dev/null\n"
      }
    }
  },
  "packages": [
    {
      "attr_path": "bat",
      "broken": false,
      "derivation": "/nix/store/b3y12i7hm5vlv7cbxzx59hcv9fvs1j8m-bat-0.25.0.drv",
      "description": "Cat(1) clone with syntax highlighting and Git integration",
      "install_id": "bat",
      "license": "[ Apache-2.0, MIT ]",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "bat-0.25.0",
      "pname": "bat",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:34:59.593403Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.25.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/w3w9wsyx97ydlplx1svh9a7kjgqvhza5-bat-0.25.0"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "bat",
      "broken": false,
      "derivation": "/nix/store/ilshrgbnlgj5jy5pihbiq286sh79i9vs-bat-0.25.0.drv",
      "description": "Cat(1) clone with syntax highlighting and Git integration",
      "install_id": "bat",
      "license": "[ Apache-2.0, MIT ]",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "bat-0.25.0",
      "pname": "bat",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:16:49.042408Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.25.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/zzhja6297wxrrr8hwadngv5zv07yn0f1-bat-0.25.0"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "coreutils",
      "broken": false,
      "derivation": "/nix/store/nwwcs1c805a51ihrhx4lzxvk2jm4crfh-coreutils-9.6.drv",
      "description": "GNU Core Utilities",
      "install_id": "coreutils",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "coreutils-9.6",
      "pname": "coreutils",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:34:59.859830Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "9.6",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/r82rf3iq14gpcgn134snrrvjfc7cwxhs-coreutils-9.6-debug",
        "info": "/nix/store/zi75ncfk3kanibc2rz5ym2vdf1ph47q7-coreutils-9.6-info",
        "out": "/nix/store/ch9dmykfvimybpb0qm7ppi3zap8fx5s0-coreutils-9.6"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "coreutils",
      "broken": false,
      "derivation": "/nix/store/5h55gpcb1nljrqg6hzrp7bblgjk47h1s-coreutils-9.6.drv",
      "description": "GNU Core Utilities",
      "install_id": "coreutils",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "coreutils-9.6",
      "pname": "coreutils",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:16:49.352271Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "9.6",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/m6z0fyhip7nhls7bg65fzdpnzb4dyw42-coreutils-9.6-debug",
        "info": "/nix/store/g1jlc3r1ca84cw21kggs3cq3vr677rhr-coreutils-9.6-info",
        "out": "/nix/store/yh6qg1nsi5h2xblcr67030pz58fsaxx3-coreutils-9.6"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "curl",
      "broken": false,
      "derivation": "/nix/store/g8l0vbzmxrr6qw44wgqllb4mw5sl8g5s-curl-8.12.1.drv",
      "description": "Command line tool for transferring files with URL syntax",
      "install_id": "curl",
      "license": "curl",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "curl-8.12.1",
      "pname": "curl",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:34:59.956319Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "8.12.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/z7wva8na2xihw715flhf7qzxmzajh2ka-curl-8.12.1-bin",
        "debug": "/nix/store/775cbq71iyyscma2vvhwxjlpzx8fqqh9-curl-8.12.1-debug",
        "dev": "/nix/store/vgq4wjxqc1pg31i2hamypdj3zh1kjx74-curl-8.12.1-dev",
        "devdoc": "/nix/store/xynp72zh6y0d2xxisir41fd212hcz596-curl-8.12.1-devdoc",
        "man": "/nix/store/80njhwgrrzkzhi3mmbzy14vnq837m3zv-curl-8.12.1-man",
        "out": "/nix/store/g7hzmaxs3iyinjzx6rzci1wcrn0h0dhk-curl-8.12.1"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "curl",
      "broken": false,
      "derivation": "/nix/store/rlj4bd2wpskzaw28ciy9hzp7x5njl1mg-curl-8.12.1.drv",
      "description": "Command line tool for transferring files with URL syntax",
      "install_id": "curl",
      "license": "curl",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "curl-8.12.1",
      "pname": "curl",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:16:49.423414Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "8.12.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/k27z9fx6v0msbsl2p54sx4sx0r8247m6-curl-8.12.1-bin",
        "debug": "/nix/store/w6wlkf6s83lnw87jvqgczqj2674ilx4a-curl-8.12.1-debug",
        "dev": "/nix/store/cn83nc0n8gkl0bi3spykczd3j44qkbq2-curl-8.12.1-dev",
        "devdoc": "/nix/store/ynv5wahwnghzk8v4zfbk8rmdn96cx4cf-curl-8.12.1-devdoc",
        "man": "/nix/store/03skkhbdzmivfr8c99rqbb9s5clfi0sy-curl-8.12.1-man",
        "out": "/nix/store/l6hzv5ms9fi7mx2j3xh0i42anyjcgpp8-curl-8.12.1"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gawk",
      "broken": false,
      "derivation": "/nix/store/rz1dwizhw1c10m7zskynr2cvjdh6867a-gawk-5.3.1.drv",
      "description": "GNU implementation of the Awk programming language",
      "install_id": "gawk",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "gawk-5.3.1",
      "pname": "gawk",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:35:00.515834Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "5.3.1",
      "outputs_to_install": [
        "man",
        "out"
      ],
      "outputs": {
        "info": "/nix/store/wsn1ip06qh675c6v8qww2ldrjk9r7qcf-gawk-5.3.1-info",
        "man": "/nix/store/z1qyf99rha83xf8873r5xkgr777rflfy-gawk-5.3.1-man",
        "out": "/nix/store/9v34jwx998aphj7mzc6lz65p32n5dkly-gawk-5.3.1"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gawk",
      "broken": false,
      "derivation": "/nix/store/l653msqq4fhgz73b8xzvf1myzxhxd5v1-gawk-5.3.1.drv",
      "description": "GNU implementation of the Awk programming language",
      "install_id": "gawk",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "gawk-5.3.1",
      "pname": "gawk",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:16:50.036269Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "5.3.1",
      "outputs_to_install": [
        "man",
        "out"
      ],
      "outputs": {
        "info": "/nix/store/y7sgqkf7kyk8akjhpbpfxyvypf108r24-gawk-5.3.1-info",
        "man": "/nix/store/qsr8hy7mlbayj6afglsqx2vh9fsx89p9-gawk-5.3.1-man",
        "out": "/nix/store/r66s4mjwqi7zkqqyry5yhhv0wm5rw96a-gawk-5.3.1"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gnused",
      "broken": false,
      "derivation": "/nix/store/d6i5ypjbrwdkjrvf4a8kc4ayhbsjzrqy-gnused-4.9.drv",
      "description": "GNU sed, a batch stream editor",
      "install_id": "gnused",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "gnused-4.9",
      "pname": "gnused",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:35:00.938886Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "4.9",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "info": "/nix/store/cfncvncp131kmshlplgblzj2ijba4yqp-gnused-4.9-info",
        "out": "/nix/store/4c59cgm460f3sjk7964vf50lm22cvs1y-gnused-4.9"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gnused",
      "broken": false,
      "derivation": "/nix/store/pbj06z1dx3jc9fkgnqh4v84gkvdxak4b-gnused-4.9.drv",
      "description": "GNU sed, a batch stream editor",
      "install_id": "gnused",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "gnused-4.9",
      "pname": "gnused",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:16:50.518266Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "4.9",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "info": "/nix/store/pcdrsxc6qy2nphlmhagbmbj4h55x18c1-gnused-4.9-info",
        "out": "/nix/store/xhql0ilzbiqwnmz4z8y0phk611wynxf2-gnused-4.9"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/58i0s7yhdp8vvz439gmsix573ym8c5q2-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:35:01.152243Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/d3xf6ih9k89ibb1lmch962fby3q3yxnk-gum-0.16.0"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/n1sip83yr4s0ffhwacxvnib3acdgzb75-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:16:50.750019Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/nr5f79bif524lvnd1ynlpag9bgc0ipph-gum-0.16.0"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk",
      "broken": false,
      "derivation": "/nix/store/1g2f8a6zdzngrngg8rawy0qzkhr3skbx-openjdk-21.0.5+11.drv",
      "description": "Open-source Java Development Kit",
      "install_id": "jdk",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "openjdk-21.0.5+11",
      "pname": "jdk",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:35:02.001191Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "21.0.5+11",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/zvapyfzz29fkivhz6rw4wv7b3vaxip9j-openjdk-21.0.5+11-debug",
        "out": "/nix/store/z570wmvkvbqdpl06ww9gxbjj9m3asap2-openjdk-21.0.5+11"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk",
      "broken": false,
      "derivation": "/nix/store/1irzv88cqn2y1g0v44hnkhk37546s5k1-openjdk-21.0.5+11.drv",
      "description": "Open-source Java Development Kit",
      "install_id": "jdk",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "openjdk-21.0.5+11",
      "pname": "jdk",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:16:51.666077Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "21.0.5+11",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/4fqiqd5m998l6aj4xqjhmks9gq8fvf9h-openjdk-21.0.5+11-debug",
        "out": "/nix/store/55qm2mvhmv7n2n6yzym1idrvnlwia73z-openjdk-21.0.5+11"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "python312Packages.pip",
      "broken": false,
      "derivation": "/nix/store/vj5md45g56fph99zgd66xmrnpq24jzb6-python3.12-pip-25.0.1.drv",
      "description": "PyPA recommended tool for installing Python packages",
      "install_id": "pip",
      "license": "[ MIT ]",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "python3.12-pip-25.0.1",
      "pname": "pip",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:35:26.684489Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "25.0.1",
      "outputs_to_install": [
        "man",
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/pzi38jap0mfjh17z5h8kamiw7yl80r38-python3.12-pip-25.0.1-dist",
        "man": "/nix/store/kn7fzrhjn0cq4041yjygih3br1ryxkj0-python3.12-pip-25.0.1-man",
        "out": "/nix/store/kzbc2c0mi739xn67v6bw7996diwz3gxj-python3.12-pip-25.0.1"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "python312Packages.pip",
      "broken": false,
      "derivation": "/nix/store/v20yxi8wralra40q4vyryj3r60m9i7lj-python3.12-pip-25.0.1.drv",
      "description": "PyPA recommended tool for installing Python packages",
      "install_id": "pip",
      "license": "[ MIT ]",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "python3.12-pip-25.0.1",
      "pname": "pip",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:17:19.255220Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "25.0.1",
      "outputs_to_install": [
        "man",
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/jimva08akkqx0664d5wv9vpp77gmfd21-python3.12-pip-25.0.1-dist",
        "man": "/nix/store/ki6m2w4b4jk1iz9pz0vb8v7x0p60p84l-python3.12-pip-25.0.1-man",
        "out": "/nix/store/n4k89cdabvy17hw583d5h150q6sm3brd-python3.12-pip-25.0.1"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "spark",
      "broken": false,
      "derivation": "/nix/store/pbc47zc46xq4fdbzaaii1vygay65kdx7-spark-3.5.4.drv",
      "description": "Apache Spark is a fast and general engine for large-scale data processing",
      "install_id": "spark",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "spark-3.5.4",
      "pname": "spark",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T01:36:03.101278Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.5.4",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/mjxs87gzwy89h4n2f2hk7yk3lgcrpbpw-spark-3.5.4"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "spark",
      "broken": false,
      "derivation": "/nix/store/zrd0qb88zgbmk1vyv3p7wl5l1bj79lfy-spark-3.5.4.drv",
      "description": "Apache Spark is a fast and general engine for large-scale data processing",
      "install_id": "spark",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=1e5b653dff12029333a6546c11e108ede13052eb",
      "name": "spark-3.5.4",
      "pname": "spark",
      "rev": "1e5b653dff12029333a6546c11e108ede13052eb",
      "rev_count": 772522,
      "rev_date": "2025-03-22T18:57:23Z",
      "scrape_date": "2025-03-24T02:17:57.712397Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.5.4",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/5b33xpa6arnb253jxd4zb7p6f59xqj04-spark-3.5.4"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    }
  ]
}