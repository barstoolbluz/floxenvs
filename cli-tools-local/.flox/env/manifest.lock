{
  "lockfile-version": 1,
  "manifest": {
    "version": 1,
    "install": {
      "awscli2": {
        "pkg-path": "awscli2"
      },
      "gh": {
        "pkg-path": "gh"
      },
      "gitFull": {
        "pkg-path": "gitFull"
      },
      "gum": {
        "pkg-path": "gum"
      },
      "jq": {
        "pkg-path": "jq"
      }
    },
    "hook": {
      "on-activate": "#!/usr/bin/env bash\n# setup cli tool auth on env activation\n\n# write core auth to cache\nFLOX_AUTH_CORE=\"${FLOX_ENV_CACHE}/flox_auth_core.sh\"\ncat > \"$FLOX_AUTH_CORE\" << 'EOF'\n#!/usr/bin/env bash\n# core auth framework - does the heavy lifting\n\n# setup dirs and files\nAUTH_STORAGE_DIR=\"${FLOX_ENV_CACHE}/auth_storage\"\nPLUGINS_DIR=\"${FLOX_ENV_CACHE}/auth_plugins\"\nCONFIG_FILE=\"${FLOX_ENV_CACHE}/auth_config.json\"\nmkdir -p \"$AUTH_STORAGE_DIR\" \"$PLUGINS_DIR\" && chmod 700 \"$AUTH_STORAGE_DIR\"\n[[ ! -f \"$CONFIG_FILE\" ]] && echo '{\"enabled_providers\":[\"github\",\"aws\"]}' > \"$CONFIG_FILE\"\n\n# Cache the storage provider - only compute once\nSTORAGE_PROVIDER=\"\"\n\n# minimal ui helper\nshow_message() { gum style --foreground \"$3\" \"$1 $2\"; }\n\n# shared auth status messaging\nauth_status_message() {\n  local provider=\"$1\" status=\"$2\" success=$3\n  \n  if [[ $success -eq 0 ]]; then\n    show_message \"✓\" \"${provider^} $status successful\" \"114\"\n  else\n    show_message \"✗\" \"${provider^} $status failed\" \"160\"\n  fi\n  return $success\n}\n\n# storage backend functions\nget_secure_storage_provider() {\n  if [[ -z \"$STORAGE_PROVIDER\" ]]; then\n    if [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n      STORAGE_PROVIDER=\"keychain\"\n    elif command -v secret-tool &>/dev/null; then\n      STORAGE_PROVIDER=\"libsecret\"\n    else\n      STORAGE_PROVIDER=\"file\"\n    fi\n  fi\n  echo \"$STORAGE_PROVIDER\"\n}\n\nstore_secret() {\n  local service=\"$1\" username=\"$2\" secret=\"$(echo -n \"$3\" | tr -d '[:space:]')\"\n  \n  case \"$(get_secure_storage_provider)\" in\n    keychain)\n      security add-generic-password -s \"flox_${service}\" -a \"$username\" -w \"$secret\" -U ;;\n    libsecret)\n      echo -n \"$secret\" | secret-tool store --label=\"Flox ${service^}\" service \"flox_${service}\" username \"$username\" ;;\n    file)\n      local secret_file=\"${AUTH_STORAGE_DIR}/${service}_${username}\"\n      echo \"$secret\" | openssl enc -aes-256-cbc -salt -pbkdf2 -out \"$secret_file\" -k \"flox-${service}-${username}\"\n      chmod 600 \"$secret_file\" ;;\n  esac\n}\n\nget_secret() {\n  local service=\"$1\" username=\"$2\"\n  \n  case \"$(get_secure_storage_provider)\" in\n    keychain)\n      security find-generic-password -s \"flox_${service}\" -a \"$username\" -w 2>/dev/null ;;\n    libsecret)\n      secret-tool lookup service \"flox_${service}\" username \"$username\" 2>/dev/null ;;\n    file)\n      local secret_file=\"${AUTH_STORAGE_DIR}/${service}_${username}\"\n      [[ -f \"$secret_file\" ]] && openssl enc -aes-256-cbc -d -salt -pbkdf2 -in \"$secret_file\" -k \"flox-${service}-${username}\" 2>/dev/null ;;\n  esac\n}\n\n# credential input helper\nprompt_credentials() {\n  local provider=\"$1\" cred_name=\"$2\" placeholder=\"$3\" var_name=\"$4\" hide_input=\"${5:-true}\"\n  local value=$(get_secret \"$provider\" \"${USER}_${cred_name}\")\n  \n  if [[ -z \"$value\" ]]; then\n    if [[ \"$hide_input\" == \"true\" ]]; then\n      value=$(gum input --password --placeholder \"$placeholder\" --value \"\")\n    else\n      value=$(gum input --placeholder \"$placeholder\" --value \"\")\n    fi\n  fi\n  \n  # Set the variable in the parent scope\n  printf -v \"$var_name\" \"%s\" \"$value\"\n  [[ -n \"$value\" ]]\n  return $?\n}\n\n# plugin functions\nlist_available_plugins() {\n  local plugins=(\"github:GitHub CLI Authentication\" \"aws:AWS CLI Authentication\")\n  \n  # grab user plugins\n  if [[ -d \"$PLUGINS_DIR\" ]]; then\n    for plugin_file in \"$PLUGINS_DIR\"/*.sh; do\n      [[ -f \"$plugin_file\" ]] && {\n        local plugin_name=$(basename \"$plugin_file\" .sh)\n        local plugin_desc=$(grep \"# description:\" \"$plugin_file\" | cut -d':' -f2-)\n        plugins+=(\"${plugin_name}:${plugin_desc}\")\n      }\n    done\n  fi\n  \n  printf \"%s\\n\" \"${plugins[@]}\"\n}\n\nget_enabled_providers() {\n  [[ ! -f \"$CONFIG_FILE\" ]] && echo '{\"enabled_providers\":[\"github\",\"aws\"]}' > \"$CONFIG_FILE\"\n  jq -r '.enabled_providers | join(\" \")' \"$CONFIG_FILE\"\n}\n\nis_provider_enabled() {\n  jq -e --arg provider \"$1\" '.enabled_providers[] | select(. == $provider)' \"$CONFIG_FILE\" &>/dev/null\n}\n\nenable_provider() {\n  if ! is_provider_enabled \"$1\"; then\n    local tmp_file=$(mktemp)\n    jq --arg provider \"$1\" '.enabled_providers += [$provider]' \"$CONFIG_FILE\" > \"$tmp_file\"\n    mv \"$tmp_file\" \"$CONFIG_FILE\"\n    show_message \"✓\" \"Enabled $1 authentication\" \"114\"\n  fi\n}\n\ndisable_provider() {\n  if is_provider_enabled \"$1\"; then\n    local tmp_file=$(mktemp)\n    jq --arg provider \"$1\" '.enabled_providers = [.enabled_providers[] | select(. != $provider)]' \"$CONFIG_FILE\" > \"$tmp_file\"\n    mv \"$tmp_file\" \"$CONFIG_FILE\"\n    show_message \"✓\" \"Disabled $1 authentication\" \"114\"\n  fi\n}\n\nload_provider() {\n  case \"$1\" in\n    github|aws) return 0 ;;\n    *) [[ -f \"$PLUGINS_DIR/${1}.sh\" ]] && source \"$PLUGINS_DIR/${1}.sh\" ;;\n  esac\n  return $?\n}\n\n# common auth plugin helper\nauth_plugin_bootstrap() {\n  local provider=\"$1\"\n  local check_func=\"$2\"\n  local auth_func=\"$3\"\n  local cred_setup_func=\"$4\"\n  \n  if $check_func; then\n    auth_status_message \"$provider\" \"already authenticated\" 0\n    return 0\n  fi\n  \n  # Setup credentials\n  local creds=()\n  if $cred_setup_func creds; then\n    if $auth_func \"${creds[@]}\"; then\n      gum confirm \"Store ${provider^} credentials securely?\" && {\n        local i=0\n        for cred_name in $(get_credential_names \"$provider\"); do\n          store_secret \"$provider\" \"${USER}_${cred_name}\" \"${creds[$i]}\"\n          ((i++))\n        done\n      }\n      auth_status_message \"$provider\" \"authentication\" 0\n      return 0\n    else\n      auth_status_message \"$provider\" \"authentication\" 1\n      return 1\n    fi\n  fi\n  \n  show_message \"✗\" \"No ${provider^} credentials provided\" \"160\"\n  return 1\n}\n\n# built-in auth providers\ngithub_cli_auth() {\n  case \"$1\" in\n    check) gh auth status &>/dev/null ;;\n    authenticate)\n      local token=\"$2\" tmp_file=$(mktemp)\n      echo -n \"$token\" > \"$tmp_file\"\n      gh auth login --with-token < \"$tmp_file\"\n      local status=$?\n      rm -f \"$tmp_file\"\n      \n      [[ $status -eq 0 ]] && export GITHUB_TOKEN=\"$token\" GH_TOKEN=\"$token\" && \n        git config --global credential.helper \"gh auth git-credential\"\n      \n      return $status\n      ;;\n    bootstrap)\n      github_credentials() {\n        local -n result=$1\n        prompt_credentials \"github\" \"token\" \"Enter GitHub token\" \"result[0]\"\n        return $?\n      }\n      \n      github_check() {\n        gh auth status &>/dev/null\n      }\n      \n      github_authenticate() {\n        github_cli_auth authenticate \"$1\"\n      }\n      \n      get_credential_names() {\n        [[ \"$1\" == \"github\" ]] && echo \"token\"\n      }\n      \n      auth_plugin_bootstrap \"github\" github_check github_authenticate github_credentials\n      ;;\n    describe) echo \"Authenticate with GitHub CLI\" ;;\n  esac\n}\n\naws_cli_auth() {\n  case \"$1\" in\n    check) aws sts get-caller-identity &>/dev/null ;;\n    authenticate)\n      local access_key=\"$2\" secret_key=\"$3\" region=\"${4:-us-east-1}\"\n      \n      aws configure set aws_access_key_id \"$access_key\"\n      aws configure set aws_secret_access_key \"$secret_key\"\n      aws configure set region \"$region\"\n      \n      if aws sts get-caller-identity &>/dev/null; then\n        export AWS_ACCESS_KEY_ID=\"$access_key\" AWS_SECRET_ACCESS_KEY=\"$secret_key\" AWS_DEFAULT_REGION=\"$region\"\n        return 0\n      fi\n      return 1\n      ;;\n    bootstrap)\n      aws_credentials() {\n        local -n result=$1\n        prompt_credentials \"aws\" \"access_key\" \"Enter AWS Access Key ID\" \"result[0]\" && \n        prompt_credentials \"aws\" \"secret_key\" \"Enter AWS Secret Access Key\" \"result[1]\" &&\n        prompt_credentials \"aws\" \"region\" \"AWS Region (default: us-east-1)\" \"result[2]\" false\n        \n        # Set default region if empty\n        [[ -z \"${result[2]}\" ]] && result[2]=\"us-east-1\"\n        \n        return 0\n      }\n      \n      aws_check() {\n        aws sts get-caller-identity &>/dev/null\n      }\n      \n      aws_authenticate() {\n        aws_cli_auth authenticate \"$1\" \"$2\" \"$3\"\n      }\n      \n      get_credential_names() {\n        [[ \"$1\" == \"aws\" ]] && echo \"access_key secret_key region\"\n      }\n      \n      auth_plugin_bootstrap \"aws\" aws_check aws_authenticate aws_credentials\n      ;;\n    describe) echo \"Authenticate with AWS CLI\" ;;\n  esac\n}\n\n# create provider template\ncreate_plugin_template() {\n  local plugin_name=\"$1\"\n  local plugin_file=\"$PLUGINS_DIR/${plugin_name}.sh\"\n  \n  cat > \"$plugin_file\" << EOL\n#!/usr/bin/env bash\n# description: authentication for ${plugin_name^} CLI\n\n${plugin_name}_cli_auth() {\n  case \"\\$1\" in\n    check) ${plugin_name} some-check-command &>/dev/null ;;\n    authenticate)\n      # auth logic using provided credentials\n      local credential1=\"\\$2\" credential2=\"\\$3\"\n      # implement auth here and return status\n      ;;\n    bootstrap)\n      ${plugin_name}_credentials() {\n        local -n result=\\$1\n        prompt_credentials \"${plugin_name}\" \"credential1\" \"Enter Credential 1\" \"result[0]\" && \n        prompt_credentials \"${plugin_name}\" \"credential2\" \"Enter Credential 2\" \"result[1]\"\n        return \\$?\n      }\n      \n      ${plugin_name}_check() {\n        ${plugin_name}_cli_auth check\n      }\n      \n      ${plugin_name}_authenticate() {\n        ${plugin_name}_cli_auth authenticate \"\\$1\" \"\\$2\"\n      }\n      \n      get_credential_names() {\n        [[ \"\\$1\" == \"${plugin_name}\" ]] && echo \"credential1 credential2\"\n      }\n      \n      auth_plugin_bootstrap \"${plugin_name}\" ${plugin_name}_check ${plugin_name}_authenticate ${plugin_name}_credentials\n      ;;\n    describe) echo \"Authenticate with ${plugin_name^} CLI\" ;;\n  esac\n}\nEOL\n\n  chmod +x \"$plugin_file\"\n  show_message \"✓\" \"Created plugin template for ${plugin_name}\" \"114\"\n}\n\n# run auth for all enabled providers\ncli_auth_manager() {\n  for provider in $(get_enabled_providers); do\n    load_provider \"$provider\" && ${provider}_cli_auth bootstrap ||\n      show_message \"✗\" \"Failed to load provider: $provider\" \"160\"\n  done\n}\nEOF\n\nchmod +x \"$FLOX_AUTH_CORE\"\n\n# write auth wizard script to cache dir\nFLOX_AUTH_WIZARD=\"${FLOX_ENV_CACHE}/flox_auth_wizard.sh\"\ncat > \"$FLOX_AUTH_WIZARD\" << 'EOF'\n#!/usr/bin/env bash\n# auth wizard - manage cli auth providers\n\n# source the core functions\nsource \"${FLOX_ENV_CACHE}/flox_auth_core.sh\"\n\n# config wizard\nauth_config_wizard() {\n  show_message \"i\" \"CLI Authentication Configuration\" \"212\"\n  \n  local action=$(gum choose \"Configure authentication providers\" \"Manage enabled providers\" \"Create new provider template\" \"Run authentication now\" \"Exit\")\n  \n  case \"$action\" in\n    \"Configure authentication providers\")\n      local available_plugins=$(list_available_plugins)\n      local choices=()\n      \n      while IFS=: read -r plugin_name plugin_desc; do\n        choices+=(\"$plugin_name - $plugin_desc\")\n      done <<< \"$available_plugins\"\n      \n      local selected=$(gum choose \"${choices[@]}\")\n      local provider=${selected%% -*}\n      \n      if [[ -n \"$provider\" ]]; then\n        if is_provider_enabled \"$provider\"; then\n          gum confirm \"Disable $provider authentication?\" && disable_provider \"$provider\"\n        else\n          gum confirm \"Enable $provider authentication?\" && enable_provider \"$provider\"\n        fi\n      fi\n      \n      auth_config_wizard\n      ;;\n    \"Manage enabled providers\")\n      local enabled=$(get_enabled_providers)\n      \n      show_message \"i\" \"Currently enabled providers:\" \"212\"\n      for provider in $enabled; do echo \"- $provider\"; done\n      \n      gum confirm \"Return to main menu?\" && auth_config_wizard\n      ;;\n    \"Create new provider template\")\n      show_message \"i\" \"Create a new provider template\" \"212\"\n      local new_provider=$(gum input --placeholder \"Enter new provider name (e.g., azure, databricks)\")\n      \n      if [[ -n \"$new_provider\" ]]; then\n        create_plugin_template \"$new_provider\"\n        \n        if gum confirm \"Enable this provider now?\"; then\n          enable_provider \"$new_provider\"\n          show_message \"i\" \"Edit ${PLUGINS_DIR}/${new_provider}.sh to implement authentication\" \"212\"\n        fi\n      fi\n      \n      auth_config_wizard\n      ;;\n    \"Run authentication now\")\n      cli_auth_manager\n      auth_config_wizard\n      ;;\n    \"Exit\")\n      show_message \"i\" \"Exiting configuration wizard\" \"212\"\n      ;;\n  esac\n}\n\n# run the wizard\nauth_config_wizard\nEOF\n\nchmod +x \"$FLOX_AUTH_WIZARD\"\n\n# run auth on activation\nsource \"$FLOX_AUTH_CORE\"\ncli_auth_manager\n"
    },
    "profile": {
      "bash": "# set up flox-auth-configure command for bash\nfunction flox-auth-configure() {\n  ${FLOX_ENV_CACHE}/flox_auth_wizard.sh\n}\n",
      "zsh": "# set up flox-auth-configure command for zsh\nfunction flox-auth-configure() {\n  ${FLOX_ENV_CACHE}/flox_auth_wizard.sh\n}\n",
      "fish": "# set up flox-auth-configure command for fish\nfunction flox-auth-configure\n  ${FLOX_ENV_CACHE}/flox_auth_wizard.sh\nend\n"
    },
    "options": {
      "systems": [
        "aarch64-darwin",
        "aarch64-linux",
        "x86_64-darwin",
        "x86_64-linux"
      ],
      "allow": {
        "licenses": []
      },
      "semver": {}
    }
  },
  "packages": [
    {
      "attr_path": "awscli2",
      "broken": false,
      "derivation": "/nix/store/6hxmxdjcix1vq8cj9wj9pqskl1r7ci7s-awscli2-2.24.16.drv",
      "description": "Unified tool to manage your AWS services",
      "install_id": "awscli2",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "awscli2-2.24.16",
      "pname": "awscli2",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.24.16",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/qxnx0fn30s29c2afbhwxqwhhzn42ldgv-awscli2-2.24.16-dist",
        "out": "/nix/store/jbj2zsvc51vvjamvbak8wrz869b9pd86-awscli2-2.24.16"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "awscli2",
      "broken": false,
      "derivation": "/nix/store/gd1xyf8sjix967h65f8dy94vqyvqszy5-awscli2-2.24.16.drv",
      "description": "Unified tool to manage your AWS services",
      "install_id": "awscli2",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "awscli2-2.24.16",
      "pname": "awscli2",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.24.16",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/jxzsifn0xqsihjd3lx6qiv68md6jq9g6-awscli2-2.24.16-dist",
        "out": "/nix/store/yq14qwp9r63hcclrfj3v2xq34ll2lcnd-awscli2-2.24.16"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "awscli2",
      "broken": false,
      "derivation": "/nix/store/fxhl4sq14qq40i419cxv6lx5bv7rhyb3-awscli2-2.24.16.drv",
      "description": "Unified tool to manage your AWS services",
      "install_id": "awscli2",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "awscli2-2.24.16",
      "pname": "awscli2",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.24.16",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/cpf5dj3zhyrkavmc5lpmm26vn00c7blc-awscli2-2.24.16-dist",
        "out": "/nix/store/v8zq6r3p3a7p14qfi9lkb48cdxxldqr5-awscli2-2.24.16"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "awscli2",
      "broken": false,
      "derivation": "/nix/store/7xpmxkydqgnd3p3i27fygi0n1h8658m4-awscli2-2.24.16.drv",
      "description": "Unified tool to manage your AWS services",
      "install_id": "awscli2",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "awscli2-2.24.16",
      "pname": "awscli2",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.24.16",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/i5rcmal4qgm0g9ix51sqkifqvykih2xk-awscli2-2.24.16-dist",
        "out": "/nix/store/sgn7sbrvvslvnbaydy2h5lpf9d8f1a1w-awscli2-2.24.16"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gh",
      "broken": false,
      "derivation": "/nix/store/wf7fhmqp98gpmxcg60928cnnfr1v0lql-gh-2.68.1.drv",
      "description": "GitHub CLI tool",
      "install_id": "gh",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "gh-2.68.1",
      "pname": "gh",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.68.1",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/qbam4w81gg5fvs4dh02mlqbvk9ycgdrn-gh-2.68.1"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gh",
      "broken": false,
      "derivation": "/nix/store/6hc24qcnkpm9hip78v3n0bb77np6042d-gh-2.68.1.drv",
      "description": "GitHub CLI tool",
      "install_id": "gh",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "gh-2.68.1",
      "pname": "gh",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.68.1",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/y54l6mdjb6dfjgc3144ycdi2ahmjaiba-gh-2.68.1"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gh",
      "broken": false,
      "derivation": "/nix/store/2f0lk3fmk14i7jkkpjjx4qbzz9v15zzs-gh-2.68.1.drv",
      "description": "GitHub CLI tool",
      "install_id": "gh",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "gh-2.68.1",
      "pname": "gh",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.68.1",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/r1qmxbxn6ila24ahh94w0h3f07dkjpsn-gh-2.68.1"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gh",
      "broken": false,
      "derivation": "/nix/store/n0485b380h5cl3iywfbqv3k04v7a6gp8-gh-2.68.1.drv",
      "description": "GitHub CLI tool",
      "install_id": "gh",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "gh-2.68.1",
      "pname": "gh",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.68.1",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/xnx0zdzqyrl07hslrf0r6dc95rvi1sb8-gh-2.68.1"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gitFull",
      "broken": false,
      "derivation": "/nix/store/62bc2157kg8bsi4j7qw1vmz7761h32x4-git-with-svn-2.48.1.drv",
      "description": "Distributed version control system",
      "install_id": "gitFull",
      "license": "GPL-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "git-with-svn-2.48.1",
      "pname": "gitFull",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.48.1",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "doc": "/nix/store/99nkxx8bq6619kls645y1d50y90bqh5r-git-with-svn-2.48.1-doc",
        "out": "/nix/store/1pdqk9yfgmz9k7zg86sa4f7gp8ryl1v2-git-with-svn-2.48.1"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gitFull",
      "broken": false,
      "derivation": "/nix/store/jr8i5sgph4pfrhkbv3bxfwfin95h1lwk-git-with-svn-2.48.1.drv",
      "description": "Distributed version control system",
      "install_id": "gitFull",
      "license": "GPL-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "git-with-svn-2.48.1",
      "pname": "gitFull",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.48.1",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/r4sm1krxiamyc13449fq9jrs4qjdqmlx-git-with-svn-2.48.1-debug",
        "doc": "/nix/store/mvbw2g3x08w3v4mykqim0jdsjz7p0iaj-git-with-svn-2.48.1-doc",
        "out": "/nix/store/fybqzkgch7dbb0z2cla842klvn1a1vns-git-with-svn-2.48.1"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gitFull",
      "broken": false,
      "derivation": "/nix/store/vwv1bk5y8wi4bng98hgb4vxhg5plmbp0-git-with-svn-2.48.1.drv",
      "description": "Distributed version control system",
      "install_id": "gitFull",
      "license": "GPL-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "git-with-svn-2.48.1",
      "pname": "gitFull",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.48.1",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "doc": "/nix/store/wdm5lvdykrp4k1drmv8c063dkgq7mspq-git-with-svn-2.48.1-doc",
        "out": "/nix/store/q0b9p6rvcrvvvsrz8x9pxf3x83a6zv7c-git-with-svn-2.48.1"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gitFull",
      "broken": false,
      "derivation": "/nix/store/63c30vq7qdpsvq3wjg2b4vzdnx54inid-git-with-svn-2.48.1.drv",
      "description": "Distributed version control system",
      "install_id": "gitFull",
      "license": "GPL-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "git-with-svn-2.48.1",
      "pname": "gitFull",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "2.48.1",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/d5dpxwrrmpqfmyars0n5qmk15mgb7r89-git-with-svn-2.48.1-debug",
        "doc": "/nix/store/6z8898pgpfgppshsrry746hydhb2cjna-git-with-svn-2.48.1-doc",
        "out": "/nix/store/ihhfkvb3girckp8ah8vzh05j33jzyw1w-git-with-svn-2.48.1"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/czwl846byk8sxy1g69r6pqr78n870awp-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/kwkfj9ifihlfzv7damvf0x42w1l904ld-gum-0.16.0"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/nxng3g50n73yvw5akm3nw5g38k1kilm3-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/fflgnfjyizrfp3kb9kg1rb13zh8iqgpa-gum-0.16.0"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/9bdpw33mminvyq64n5p1qw9gql3b2fga-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/854g6bmylzpaz7s1xdccfq9x2xkx6fcc-gum-0.16.0"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/z0lngxwv48b41x4pyq5qp9lv33c2lss5-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/hn1dl52063dlljmzjlx0cw1f59yk5r2n-gum-0.16.0"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jq",
      "broken": false,
      "derivation": "/nix/store/2sgjcciiqv9sqjhhkalvmk9gpdyz771m-jq-1.7.1.drv",
      "description": "Lightweight and flexible command-line JSON processor",
      "install_id": "jq",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "jq-1.7.1",
      "pname": "jq",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "1.7.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/a0d5735pbpxr817gjzvv6bdy2ycj38nf-jq-1.7.1-bin",
        "dev": "/nix/store/yhykv5iafas7lp327w3xkj1gxkhifcbk-jq-1.7.1-dev",
        "doc": "/nix/store/rqjr3mln9jmidha6izp07fq9fp30y4sx-jq-1.7.1-doc",
        "man": "/nix/store/id3vbyr5wqz7ljylcdqjvrpdsiv4a02v-jq-1.7.1-man",
        "out": "/nix/store/m0kqs2n6b4idvhpzcqad9jfz1cbwib2n-jq-1.7.1"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jq",
      "broken": false,
      "derivation": "/nix/store/s1swwzprx0gcybvzp3qn5wbxd91ilmch-jq-1.7.1.drv",
      "description": "Lightweight and flexible command-line JSON processor",
      "install_id": "jq",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "jq-1.7.1",
      "pname": "jq",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "1.7.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/64k31kawylkwbjh4r1bwxfq8zb0yzqyi-jq-1.7.1-bin",
        "dev": "/nix/store/r5wikmfi7na32gcx46p3ncxmzns1f5xz-jq-1.7.1-dev",
        "doc": "/nix/store/mhfyqmwvnqihqs5av778m4lic0p15hyf-jq-1.7.1-doc",
        "man": "/nix/store/w29k8y3v6rfyy4kvx95dc79lyfcq7ikf-jq-1.7.1-man",
        "out": "/nix/store/y3sdsgvnpmwp42d2kd9rq3d5anraccpy-jq-1.7.1"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jq",
      "broken": false,
      "derivation": "/nix/store/bc4dsjfqaf4zhf2vkbqgk56j49v3kagm-jq-1.7.1.drv",
      "description": "Lightweight and flexible command-line JSON processor",
      "install_id": "jq",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "jq-1.7.1",
      "pname": "jq",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "1.7.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/p6ph78v4kf373vnsigwaqh7j3dlapnny-jq-1.7.1-bin",
        "dev": "/nix/store/6lhl23njgh2pjh3sypxv4s0g6n0zdmqk-jq-1.7.1-dev",
        "doc": "/nix/store/5md80wrj52gklrxwsf68dkqc9igmq928-jq-1.7.1-doc",
        "man": "/nix/store/83f3x5240k5kqc8bw758nq4q6d3j7l5p-jq-1.7.1-man",
        "out": "/nix/store/fbv7k9csv3m2af8chfblxzlv2mgaz8i0-jq-1.7.1"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jq",
      "broken": false,
      "derivation": "/nix/store/h4nhfds4cmrrb6565apsk3l2z7pgi1qq-jq-1.7.1.drv",
      "description": "Lightweight and flexible command-line JSON processor",
      "install_id": "jq",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=6607cf789e541e7873d40d3a8f7815ea92204f32",
      "name": "jq-1.7.1",
      "pname": "jq",
      "rev": "6607cf789e541e7873d40d3a8f7815ea92204f32",
      "rev_count": 767267,
      "rev_date": "2025-03-13T07:39:42Z",
      "scrape_date": "2025-03-14T00:31:05Z",
      "stabilities": [
        "staging",
        "unstable"
      ],
      "unfree": false,
      "version": "1.7.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/134m2q047vsr9miwh5l227j7sh9jb130-jq-1.7.1-bin",
        "dev": "/nix/store/94yz5x26ssx2pqn7gamlngp306s8mz60-jq-1.7.1-dev",
        "doc": "/nix/store/byqqs2ayp67zvmd6dqi4jahwm1f779cj-jq-1.7.1-doc",
        "man": "/nix/store/8vlqxykb9959nn5bl5vph99d2c4np9wg-jq-1.7.1-man",
        "out": "/nix/store/6zy1hkwlwq9r97swjy616vf096dccrsr-jq-1.7.1"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    }
  ]
}