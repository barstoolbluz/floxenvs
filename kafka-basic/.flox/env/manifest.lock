{
  "lockfile-version": 1,
  "manifest": {
    "version": 1,
    "install": {
      "bat": {
        "pkg-path": "bat",
        "pkg-group": "helper-tools"
      },
      "coreutils": {
        "pkg-path": "coreutils",
        "pkg-group": "darwin-tools"
      },
      "curl": {
        "pkg-path": "curl",
        "pkg-group": "helper-tools"
      },
      "gawk": {
        "pkg-path": "gawk",
        "pkg-group": "darwin-tools"
      },
      "gnugrep": {
        "pkg-path": "gnugrep",
        "pkg-group": "gnugrep"
      },
      "gum": {
        "pkg-path": "gum"
      },
      "jdk": {
        "pkg-path": "jdk"
      },
      "jq": {
        "pkg-path": "jq",
        "pkg-group": "helper-tools"
      },
      "kafka": {
        "pkg-path": "apacheKafka"
      }
    },
    "vars": {
      "KAFKA_CONFIG_DIR": "$FLOX_ENV_CACHE/kafka-config",
      "KAFKA_DATA_DIR": "$FLOX_ENV_CACHE/data/kafka",
      "KAFKA_LOG_DIR": "$FLOX_ENV_CACHE/kafka-logs"
    },
    "hook": {
      "on-activate": "# Create required directories\nmkdir -p \"$FLOX_ENV_CACHE/kafka-config\"\nmkdir -p \"$FLOX_ENV_CACHE/kafka-logs\" \nmkdir -p \"$FLOX_ENV_CACHE/data/kafka\"\nmkdir -p \"$FLOX_ENV_CACHE/kafka-message-output\"\nmkdir -p \"$FLOX_ENV_CACHE/kafka-scripts\"\n\n# Define the hash generation correctly\ngenerate_config_hash() {\n  (\n    # List of critical configuration variables that define the setup\n    echo \"KAFKA_MODE=$KAFKA_MODE\"\n    echo \"KAFKA_NODE_ID=$KAFKA_NODE_ID\"\n    echo \"KAFKA_HOST=$KAFKA_HOST\"\n    echo \"KAFKA_PORT=$KAFKA_PORT\"\n    echo \"KRAFT_CONTROLLER_PORT=$KRAFT_CONTROLLER_PORT\"\n    echo \"PROCESS_ROLES=$PROCESS_ROLES\"\n    echo \"CONTROLLER_QUORUM=$CONTROLLER_QUORUM\"\n    echo \"KAFKA_CLUSTER_ID=$KAFKA_CLUSTER_ID\"\n    echo \"KAFKA_REPLICATION_FACTOR=$KAFKA_REPLICATION_FACTOR\" \n    echo \"KAFKA_NUM_PARTITIONS=$KAFKA_NUM_PARTITIONS\"\n  ) | sha256sum | awk '{print $1}'\n}\n\n# Check if configuration has changed\nCONFIG_HASH_FILE=\"$FLOX_ENV_CACHE/kafka-config/config_hash\"\nCURRENT_HASH=$(generate_config_hash)\n\n# Create hash directory if it doesn't exist\nmkdir -p \"$(dirname \"$CONFIG_HASH_FILE\")\"\n\n# Detect configuration changes and reset if needed\nif [ -f \"$CONFIG_HASH_FILE\" ]; then\n  STORED_HASH=$(cat \"$CONFIG_HASH_FILE\")\n  if [ \"$CURRENT_HASH\" != \"$STORED_HASH\" ]; then\n    echo \"Configuration change detected. Resetting Kafka state...\"\n    \n    # Stop any running Kafka service (non-interactive)\n    if command -v systemctl >/dev/null 2>&1 && systemctl is-active --quiet flox-kafka; then\n      systemctl stop flox-kafka >/dev/null 2>&1\n    fi\n    \n    # Clean up existing data and configuration\n    rm -rf \"$FLOX_ENV_CACHE/data/kafka\"/*\n    rm -f \"$FLOX_ENV_CACHE/kafka-config/cluster_id\"\n    rm -f \"$FLOX_ENV_CACHE/kafka_config.sh\"\n    rm -f \"$FLOX_ENV_CACHE/kafka-config/kraft.properties\"\n    rm -f \"$FLOX_ENV_CACHE/kafka-config/kraft.properties.base\"\n    \n    # Create fresh directories\n    mkdir -p \"$FLOX_ENV_CACHE/data/kafka\"\n    \n    # Store new hash\n    echo \"$CURRENT_HASH\" > \"$CONFIG_HASH_FILE\"\n    echo \"Reset complete. New configuration will be applied.\"\n  fi\nelse\n  # First run, just store the hash\n  echo \"$CURRENT_HASH\" > \"$CONFIG_HASH_FILE\"\nfi\n\n# Set Kafka home if not already set\nif [ -z \"$KAFKA_HOME\" ]; then\n  export KAFKA_HOME=\"$(dirname $(which kafka-server-start.sh))/..\"\nfi\n\n# Set default directories\nif [ -z \"$KAFKA_CONFIG_DIR\" ]; then\n  export KAFKA_CONFIG_DIR=\"$FLOX_ENV_CACHE/kafka-config\"\nfi\n\nif [ -z \"$KAFKA_LOG_DIR\" ]; then\n  export KAFKA_LOG_DIR=\"$FLOX_ENV_CACHE/kafka-logs\"\nfi\n\nif [ -z \"$KAFKA_DATA_DIR\" ]; then\n  export KAFKA_DATA_DIR=\"$FLOX_ENV_CACHE/data/kafka\"\nfi\n\n# Set default mode\nif [ -z \"$KAFKA_MODE\" ]; then\n  export KAFKA_MODE=\"kraft-combined\"\nfi\n\n# Detect IP address if needed\nif [ -z \"$KAFKA_HOST\" ]; then\n  # Try to detect IP based on OS\n  if [ \"$(uname)\" = \"Darwin\" ]; then\n    # macOS detection\n    DETECTED_IP=$(ifconfig | grep \"inet \" | grep -v 127.0.0.1 | awk '{print $2}' | head -n 1)\n  else\n    # Linux detection\n    DETECTED_IP=$(hostname -I 2>/dev/null | awk '{print $1}')\n    \n    # Fallback methods if needed\n    if [ -z \"$DETECTED_IP\" ]; then\n      if command -v ip >/dev/null 2>&1; then\n        DETECTED_IP=$(ip -4 addr | grep -v \"127.0.0.1\" | grep inet | awk '{print $2}' | cut -d/ -f1 | head -n 1)\n      elif command -v ifconfig >/dev/null 2>&1; then\n        DETECTED_IP=$(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1' | head -n 1)\n      fi\n    fi\n  fi\n  \n  # Default to localhost if detection failed\n  if [ -z \"$DETECTED_IP\" ]; then\n    DETECTED_IP=\"localhost\"\n    echo \"Warning: Could not detect IP address, using localhost as fallback.\"\n  fi\n  \n  export KAFKA_HOST=\"$DETECTED_IP\"\nfi\n\n# Set default ports\nif [ -z \"$KAFKA_PORT\" ]; then\n  export KAFKA_PORT=\"9092\"\nfi\n\nif [ -z \"$KRAFT_CONTROLLER_PORT\" ]; then\n  export KRAFT_CONTROLLER_PORT=\"9093\"\nfi\n\n# Set default node ID\nif [ -z \"$KAFKA_NODE_ID\" ]; then\n  export KAFKA_NODE_ID=\"1\"\nfi\n\n# Set process roles based on mode\nif [ -z \"$PROCESS_ROLES\" ]; then\n  if [ \"$KAFKA_MODE\" = \"kraft-combined\" ]; then\n    export PROCESS_ROLES=\"broker,controller\"\n  elif [ \"$KAFKA_MODE\" = \"kraft-controller\" ]; then\n    export PROCESS_ROLES=\"controller\"\n  elif [ \"$KAFKA_MODE\" = \"kraft-broker\" ]; then\n    export PROCESS_ROLES=\"broker\"\n  fi\nfi\n\n# Set default replication and partitions\nif [ -z \"$KAFKA_REPLICATION_FACTOR\" ]; then\n  export KAFKA_REPLICATION_FACTOR=\"1\"\nfi\n\nif [ -z \"$KAFKA_NUM_PARTITIONS\" ]; then\n  export KAFKA_NUM_PARTITIONS=\"1\"\nfi\n\n# Set controller quorum if needed\nif [ -z \"$CONTROLLER_QUORUM\" ]; then\n  if [ \"$KAFKA_MODE\" = \"kraft-combined\" ] || [ \"$KAFKA_MODE\" = \"kraft-controller\" ]; then\n    export CONTROLLER_QUORUM=\"${KAFKA_NODE_ID}@${KAFKA_HOST}:${KRAFT_CONTROLLER_PORT}\"\n  elif [ \"$KAFKA_MODE\" = \"kraft-broker\" ]; then\n    # For broker mode, the controller quorum should NOT include our node ID\n    # Default to a controller with node ID 101 (to avoid conflicts)\n    CONTROLLER_NODE_ID=101\n    export CONTROLLER_QUORUM=\"${CONTROLLER_NODE_ID}@${KAFKA_HOST}:${KRAFT_CONTROLLER_PORT}\"\n    echo \"WARNING: Using default CONTROLLER_QUORUM=${CONTROLLER_QUORUM}\"\n    echo \"         Please set CONTROLLER_QUORUM explicitly for proper setup.\"\n  fi\nfi\n\n# Set client mode defaults\nif [ \"$KAFKA_MODE\" = \"client\" ]; then\n  if [ -z \"$BOOTSTRAP_SERVERS\" ]; then\n    export BOOTSTRAP_SERVERS=\"localhost:9092\"\n  fi\n  \n  if [ -z \"$CLIENT_TYPE\" ]; then\n    export CLIENT_TYPE=\"consumer\"\n  fi\n  \n  if [ -z \"$KAFKA_TOPICS\" ]; then\n    export KAFKA_TOPICS=\"flox-is-great\"\n  fi\n  \n  if [ -z \"$KAFKA_CLIENT_COUNT\" ]; then\n    export KAFKA_CLIENT_COUNT=\"1\"\n  fi\n  \n  if [ -z \"$KAFKA_CLIENT_PARALLEL\" ]; then\n    export KAFKA_CLIENT_PARALLEL=\"false\"\n  fi\n  \n  if [ -z \"$KAFKA_MESSAGE_PROCESSING_MODE\" ]; then\n    export KAFKA_MESSAGE_PROCESSING_MODE=\"echo\"\n  fi\n  \n  if [ -z \"$KAFKA_MESSAGE_OUTPUT_DIR\" ]; then\n    export KAFKA_MESSAGE_OUTPUT_DIR=\"$FLOX_ENV_CACHE/kafka-message-output\"\n  fi\n  \n  if [ -z \"$KAFKA_SCRIPTS_DIR\" ]; then\n    export KAFKA_SCRIPTS_DIR=\"$FLOX_ENV_CACHE/kafka-scripts\"\n  fi\n  \n  if [ -z \"$KAFKA_FILE_APPEND\" ]; then\n    export KAFKA_FILE_APPEND=\"true\"\n  fi\nfi\n\n# Create kafka_config.sh file\necho \"# Kafka config generated by Flox environment\" > \"$FLOX_ENV_CACHE/kafka_config.sh\"\necho \"KAFKA_MODE=\\\"$KAFKA_MODE\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\necho \"KAFKA_CONFIG_DIR=\\\"$KAFKA_CONFIG_DIR\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\" \necho \"KAFKA_LOG_DIR=\\\"$KAFKA_LOG_DIR\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\necho \"KAFKA_DATA_DIR=\\\"$KAFKA_DATA_DIR\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n\n# Add KRaft mode settings\nif [ \"$KAFKA_MODE\" = \"kraft-combined\" ] || [ \"$KAFKA_MODE\" = \"kraft-controller\" ] || [ \"$KAFKA_MODE\" = \"kraft-broker\" ]; then\n  echo \"KAFKA_NODE_ID=\\\"$KAFKA_NODE_ID\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_HOST=\\\"$KAFKA_HOST\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_PORT=\\\"$KAFKA_PORT\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KRAFT_CONTROLLER_PORT=\\\"$KRAFT_CONTROLLER_PORT\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"PROCESS_ROLES=\\\"$PROCESS_ROLES\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  \n  # Add controller quorum if set\n  if [ -n \"$CONTROLLER_QUORUM\" ]; then\n    echo \"CONTROLLER_QUORUM=\\\"$CONTROLLER_QUORUM\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  fi\n  \n  # Handle cluster ID\n  if [ -f \"$KAFKA_CONFIG_DIR/cluster_id\" ]; then\n    CLUSTER_ID=$(cat \"$KAFKA_CONFIG_DIR/cluster_id\")\n    echo \"KAFKA_CLUSTER_ID=\\\"$CLUSTER_ID\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  elif [ -n \"$KAFKA_CLUSTER_ID\" ]; then\n    echo \"$KAFKA_CLUSTER_ID\" > \"$KAFKA_CONFIG_DIR/cluster_id\"\n    echo \"KAFKA_CLUSTER_ID=\\\"$KAFKA_CLUSTER_ID\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  elif [ \"$KAFKA_MODE\" = \"kraft-controller\" ] || [ \"$KAFKA_MODE\" = \"kraft-combined\" ]; then\n    GENERATED_CLUSTER_ID=$(kafka-storage.sh random-uuid)\n    echo \"$GENERATED_CLUSTER_ID\" > \"$KAFKA_CONFIG_DIR/cluster_id\"\n    echo \"KAFKA_CLUSTER_ID=\\\"$GENERATED_CLUSTER_ID\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  fi\n\n  # Create kraft.properties.base file\n  echo \"# KRaft config generated by Flox\" > \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  echo \"node.id=$KAFKA_NODE_ID\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  echo \"process.roles=$PROCESS_ROLES\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  \n  # Add listeners based on role\n  if [ \"$PROCESS_ROLES\" = \"broker,controller\" ]; then\n    echo \"listeners=PLAINTEXT://$KAFKA_HOST:$KAFKA_PORT,CONTROLLER://$KAFKA_HOST:$KRAFT_CONTROLLER_PORT\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n    echo \"advertised.listeners=PLAINTEXT://$KAFKA_HOST:$KAFKA_PORT\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  elif [ \"$PROCESS_ROLES\" = \"broker\" ]; then\n    echo \"listeners=PLAINTEXT://$KAFKA_HOST:$KAFKA_PORT\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n    echo \"advertised.listeners=PLAINTEXT://$KAFKA_HOST:$KAFKA_PORT\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  else\n    # controller-only\n    echo \"listeners=CONTROLLER://$KAFKA_HOST:$KRAFT_CONTROLLER_PORT\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  fi\n  \n  # Add security protocols and other settings\n  echo \"listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  echo \"controller.listener.names=CONTROLLER\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  echo \"controller.quorum.voters=$CONTROLLER_QUORUM\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  echo \"log.dirs=$KAFKA_DATA_DIR\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  echo \"default.replication.factor=$KAFKA_REPLICATION_FACTOR\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  echo \"num.partitions=$KAFKA_NUM_PARTITIONS\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  \n  # Set additional properties with defaults if not specified\n  if [ -n \"$KAFKA_LOG_RETENTION_HOURS\" ]; then\n    echo \"log.retention.hours=$KAFKA_LOG_RETENTION_HOURS\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  else\n    echo \"log.retention.hours=168\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  fi\n  \n  if [ -n \"$KAFKA_LOG_SEGMENT_BYTES\" ]; then\n    echo \"log.segment.bytes=$KAFKA_LOG_SEGMENT_BYTES\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  else\n    echo \"log.segment.bytes=1073741824\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  fi\n  \n  if [ -n \"$KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS\" ]; then\n    echo \"log.retention.check.interval.ms=$KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  else\n    echo \"log.retention.check.interval.ms=300000\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  fi\n  \n  if [ -n \"$KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR\" ]; then\n    echo \"offsets.topic.replication.factor=$KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  else\n    echo \"offsets.topic.replication.factor=1\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  fi\n  \n  if [ -n \"$KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR\" ]; then\n    echo \"transaction.state.log.replication.factor=$KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  else\n    echo \"transaction.state.log.replication.factor=1\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  fi\n  \n  if [ -n \"$KAFKA_TRANSACTION_STATE_LOG_MIN_ISR\" ]; then\n    echo \"transaction.state.log.min.isr=$KAFKA_TRANSACTION_STATE_LOG_MIN_ISR\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  else\n    echo \"transaction.state.log.min.isr=1\" >> \"$KAFKA_CONFIG_DIR/kraft.properties.base\"\n  fi\n\n# Add client mode settings\nelif [ \"$KAFKA_MODE\" = \"client\" ]; then\n  echo \"BOOTSTRAP_SERVERS=\\\"$BOOTSTRAP_SERVERS\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"CLIENT_TYPE=\\\"$CLIENT_TYPE\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_TOPICS=\\\"$KAFKA_TOPICS\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_CLIENT_COUNT=\\\"$KAFKA_CLIENT_COUNT\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_CLIENT_PARALLEL=\\\"$KAFKA_CLIENT_PARALLEL\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_MESSAGE_PROCESSING_MODE=\\\"$KAFKA_MESSAGE_PROCESSING_MODE\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_MESSAGE_OUTPUT_DIR=\\\"$KAFKA_MESSAGE_OUTPUT_DIR\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_SCRIPTS_DIR=\\\"$KAFKA_SCRIPTS_DIR\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\n  echo \"KAFKA_FILE_APPEND=\\\"$KAFKA_FILE_APPEND\\\"\" >> \"$FLOX_ENV_CACHE/kafka_config.sh\"\nfi\n\n# Find JAVA_HOME if not set\nif [ -z \"$JAVA_HOME\" ]; then\n  export JAVA_HOME=\"$(dirname $(dirname $(which java)))\"\nfi\n\n# Display current configuration\necho \"Kafka Environment Configuration:\"\necho \"  Mode:            $KAFKA_MODE\"\nif [ \"$KAFKA_MODE\" = \"kraft-combined\" ] || [ \"$KAFKA_MODE\" = \"kraft-controller\" ] || [ \"$KAFKA_MODE\" = \"kraft-broker\" ]; then\n  echo \"  Node ID:         $KAFKA_NODE_ID\"\n  echo \"  Host:            $KAFKA_HOST\"\n  if [ \"$KAFKA_MODE\" != \"kraft-controller\" ]; then \n    echo \"  Broker Port:     $KAFKA_PORT\"\n  fi\n  if [ \"$KAFKA_MODE\" != \"kraft-broker\" ]; then\n    echo \"  Controller Port: $KRAFT_CONTROLLER_PORT\"\n  fi\n  echo \"  Process Roles:   $PROCESS_ROLES\"\n  if [ -f \"$KAFKA_CONFIG_DIR/cluster_id\" ]; then\n    echo \"  Cluster ID:      $(cat \"$KAFKA_CONFIG_DIR/cluster_id\")\"\n  fi\nelif [ \"$KAFKA_MODE\" = \"client\" ]; then\n  echo \"  Bootstrap Servers: $BOOTSTRAP_SERVERS\"\n  echo \"  Client Type:       $CLIENT_TYPE\"\n  echo \"  Topics:            $KAFKA_TOPICS\"\nfi\n"
    },
    "profile": {},
    "options": {
      "systems": [
        "aarch64-linux",
        "x86_64-linux",
        "aarch64-darwin",
        "x86_64-darwin"
      ]
    },
    "services": {
      "kafka": {
        "command": "# creates required directories\nmkdir -p \"$FLOX_ENV_CACHE/kafka-logs\"\nmkdir -p \"$FLOX_ENV_CACHE/kafka-config\"\nmkdir -p \"$FLOX_ENV_CACHE/data/kafka\"\nmkdir -p \"$FLOX_ENV_CACHE/kafka-message-output\"\nmkdir -p \"$FLOX_ENV_CACHE/kafka-scripts\"\n\n# checks for config changes / resets kafka_config.sh\nCONFIG_HASH_FILE=\"$FLOX_ENV_CACHE/kafka-config/config_hash\"\nif [ ! -f \"$CONFIG_HASH_FILE\" ]; then\n  echo \"WARNING: Configuration hash file not found. Service may not start correctly.\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\nfi\n\n# verifies config file exists\nif [ ! -f \"$FLOX_ENV_CACHE/kafka_config.sh\" ]; then\n    echo \"ERROR: kafka_config.sh not found. Please run 'bootstrap' first.\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    exit 1\nfi\n\n# loads config - uses set -a to auto-export all variables\necho \"Loading config from: $FLOX_ENV_CACHE/kafka_config.sh\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\nif [ -f \"$FLOX_ENV_CACHE/kafka_config.sh\" ]; then\n    set -a\n    . \"$FLOX_ENV_CACHE/kafka_config.sh\"\n    set +a\n    echo \"config loaded successfully\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\nelse\n    echo \"ERROR: config file not found\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    exit 1\nfi\n\n# logs debug info to verify variables\necho \"DEBUG: After sourcing kafka_config.sh\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\necho \"KAFKA_MODE=${KAFKA_MODE}\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\necho \"BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS}\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\necho \"CLIENT_TYPE=${CLIENT_TYPE}\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\necho \"KAFKA_CONFIG_DIR=${KAFKA_CONFIG_DIR}\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\necho \"KAFKA_TOPICS=${KAFKA_TOPICS}\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\necho \"KAFKA_CLUSTER_ID=${KAFKA_CLUSTER_ID}\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n\n# Explicitly load cluster ID from file if not in environment and file exists\nif [ -z \"$KAFKA_CLUSTER_ID\" ] && [ -f \"$KAFKA_CONFIG_DIR/cluster_id\" ]; then\n    KAFKA_CLUSTER_ID=$(cat \"$KAFKA_CONFIG_DIR/cluster_id\")\n    echo \"Loaded cluster ID from file: $KAFKA_CLUSTER_ID\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\nfi\n\n# performs mode-specific validation\nif [ \"$KAFKA_MODE\" = \"client\" ]; then\n    # validates client mode variables\n    if [ -z \"$KAFKA_MODE\" ] || [ -z \"$BOOTSTRAP_SERVERS\" ]; then\n        echo \"ERROR: Critical variables not set for client mode. Please run 'bootstrap' first.\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        echo \"KAFKA_MODE='$KAFKA_MODE', BOOTSTRAP_SERVERS='$BOOTSTRAP_SERVERS'\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        exit 1\n    fi\nelse\n    # validates broker/controller mode variables\n    if [ -z \"$KAFKA_MODE\" ] || [ -z \"$KAFKA_NODE_ID\" ] || [ -z \"$KAFKA_HOST\" ]; then\n        echo \"ERROR: Critical variables not set. Please run 'bootstrap' first.\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        echo \"KAFKA_MODE='$KAFKA_MODE', KAFKA_NODE_ID='$KAFKA_NODE_ID', KAFKA_HOST='$KAFKA_HOST'\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        exit 1\n    fi\n\n    # makes sure node ID is not in controller quorum (broker mode only)\n    if [ \"$KAFKA_MODE\" = \"kraft-broker\" ]; then\n        if [[ \"$CONTROLLER_QUORUM\" == *\"${KAFKA_NODE_ID}@\"* ]]; then\n            echo \"ERROR: In broker-only mode, the broker's node ID ($KAFKA_NODE_ID) cannot be part of the controller quorum ($CONTROLLER_QUORUM)\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n            exit 1\n        fi\n    fi\nfi\n\n# sets default for JMX cleanup\nexport KAFKA_CLEANUP_JMX=\"${KAFKA_CLEANUP_JMX:-true}\"\n\n# logs config\necho \"=== Kafka Service Startup ===\" > \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\necho \"Starting at $(date)\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\necho \"KAFKA_MODE = $KAFKA_MODE\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n\n# handles client mode operation\nif [ \"$KAFKA_MODE\" = \"client\" ]; then\n    echo \"Starting in client mode with $CLIENT_TYPE\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    echo \"Bootstrap servers: $BOOTSTRAP_SERVERS\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    echo \"Client count: ${KAFKA_CLIENT_COUNT:-1}\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    echo \"Running in parallel: ${KAFKA_CLIENT_PARALLEL:-true}\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    \n    # sets defaults for client mode\n    KAFKA_CLIENT_COUNT=${KAFKA_CLIENT_COUNT:-1}\n    KAFKA_CLIENT_PARALLEL=${KAFKA_CLIENT_PARALLEL:-true}\n    KAFKA_FILE_APPEND=${KAFKA_FILE_APPEND:-true}\n    KAFKA_MESSAGE_PROCESSING_MODE=${KAFKA_MESSAGE_PROCESSING_MODE:-echo}\n    KAFKA_MESSAGE_OUTPUT_DIR=${KAFKA_MESSAGE_OUTPUT_DIR:-$FLOX_ENV_CACHE/kafka-message-output}\n    KAFKA_SCRIPTS_DIR=${KAFKA_SCRIPTS_DIR:-$FLOX_ENV_CACHE/kafka-scripts}\n    \n    # stores background process IDs\n    declare -a client_pids\n    \n    # runs a client instance\n    run_client_instance() {\n        local client_id=$1\n        local log_file=\"$FLOX_ENV_CACHE/kafka-logs/client_${client_id}.log\"\n        \n        echo \"Starting client instance $client_id (type: $CLIENT_TYPE, mode: $KAFKA_MESSAGE_PROCESSING_MODE)\" | tee -a \"$log_file\"\n        \n        # creates temporary properties file\n        local client_props_file=\"$FLOX_ENV_CACHE/kafka-config/client_${client_id}.properties\"\n        \n        # exports env vars and runs client\n        case \"$CLIENT_TYPE\" in\n            \"consumer\")\n                # generates consumer client.properties\n                cat > \"$client_props_file\" <<-ENDOFCONSUMER\nbootstrap.servers=$BOOTSTRAP_SERVERS\ngroup.id=flox-consumer-group-$client_id\nauto.offset.reset=earliest\nenable.auto.commit=true\nauto.commit.interval.ms=1000\nkey.deserializer=org.apache.kafka.common.serialization.StringDeserializer\nvalue.deserializer=org.apache.kafka.common.serialization.StringDeserializer\nENDOFCONSUMER\n\n                case \"$KAFKA_MESSAGE_PROCESSING_MODE\" in\n                    \"echo\")\n                        env BOOTSTRAP_SERVERS=\"$BOOTSTRAP_SERVERS\" KAFKA_TOPICS=\"$KAFKA_TOPICS\" \\\n                            kafka-console-consumer.sh --bootstrap-server \"$BOOTSTRAP_SERVERS\" \\\n                            --topic \"$KAFKA_TOPICS\" \\\n                            --consumer.config \"$client_props_file\" \\\n                            2>&1 | tee -a \"$log_file\"\n                        ;;\n                    \"file\")\n                        output_file=\"$KAFKA_MESSAGE_OUTPUT_DIR/client_${client_id}_messages.txt\"\n                        if [ \"$KAFKA_FILE_APPEND\" = \"true\" ]; then\n                            env BOOTSTRAP_SERVERS=\"$BOOTSTRAP_SERVERS\" KAFKA_TOPICS=\"$KAFKA_TOPICS\" \\\n                                kafka-console-consumer.sh --bootstrap-server \"$BOOTSTRAP_SERVERS\" \\\n                                --topic \"$KAFKA_TOPICS\" \\\n                                --consumer.config \"$client_props_file\" \\\n                                2>> \"$log_file\" >> \"$output_file\"\n                        else\n                            env BOOTSTRAP_SERVERS=\"$BOOTSTRAP_SERVERS\" KAFKA_TOPICS=\"$KAFKA_TOPICS\" \\\n                                kafka-console-consumer.sh --bootstrap-server \"$BOOTSTRAP_SERVERS\" \\\n                                --topic \"$KAFKA_TOPICS\" \\\n                                --consumer.config \"$client_props_file\" \\\n                                2>> \"$log_file\" > \"$output_file\"\n                        fi\n                        ;;\n                    \"script\")\n                        script_file=\"$KAFKA_SCRIPTS_DIR/process_messages.sh\"\n                        if [ -x \"$script_file\" ]; then\n                            env BOOTSTRAP_SERVERS=\"$BOOTSTRAP_SERVERS\" KAFKA_TOPICS=\"$KAFKA_TOPICS\" \\\n                                kafka-console-consumer.sh --bootstrap-server \"$BOOTSTRAP_SERVERS\" \\\n                                --topic \"$KAFKA_TOPICS\" \\\n                                --consumer.config \"$client_props_file\" \\\n                                2>> \"$log_file\" | \"$script_file\" 2>&1 | tee -a \"$log_file\"\n                        else\n                            echo \"ERROR: Processing script not found or not executable: $script_file\" | tee -a \"$log_file\"\n                            exit 1\n                        fi\n                        ;;\n                esac\n                ;;\n            \"producer\")\n                # Client mode implementations would continue here\n                # Similar to original script\n                ;;\n        esac\n    }\n    \n    # Original client mode logic would continue here\n    # ...\n    \nelse\n    # handles broker/controller mode logic\n    echo \"Starting Kafka in $KAFKA_MODE mode\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    echo \"KAFKA_NODE_ID = $KAFKA_NODE_ID\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    echo \"KAFKA_HOST = $KAFKA_HOST\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    echo \"KAFKA_PORT = $KAFKA_PORT\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    echo \"KRAFT_CONTROLLER_PORT = $KRAFT_CONTROLLER_PORT\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    echo \"KAFKA_CLUSTER_ID = $KAFKA_CLUSTER_ID\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n    echo \"KAFKA_DATA_DIR = $KAFKA_DATA_DIR\" >> \"$FLOX_ENV_CACHE/kafka-logs/service.log\"\n\n    # ensures data directory exists\n    mkdir -p \"$KAFKA_DATA_DIR\"\n\n    # regenerates kraft.properties from base file\n    if [ -f \"$KAFKA_CONFIG_DIR/kraft.properties.base\" ]; then\n        cp \"$KAFKA_CONFIG_DIR/kraft.properties.base\" \"$KAFKA_CONFIG_DIR/kraft.properties\"\n    else\n        echo \"ERROR: kraft.properties.base not found\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        exit 1\n    fi\n    \n    # formats storage if meta.properties not exist\n    if [ ! -f \"$KAFKA_DATA_DIR/meta.properties\" ]; then\n        echo \"  ℹ️  Formatting KRaft storage directory (first-time setup)\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        echo \"  ℹ️  Using cluster ID: $KAFKA_CLUSTER_ID\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n\n        if env KAFKA_CLUSTER_ID=\"$KAFKA_CLUSTER_ID\" KAFKA_DATA_DIR=\"$KAFKA_DATA_DIR\" kafka-storage.sh format --cluster-id \"$KAFKA_CLUSTER_ID\" --config \"$KAFKA_CONFIG_DIR/kraft.properties\"; then\n            echo \"  ✓ Storage formatted successfully\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        else\n            echo \"  ❌ ERROR: Storage format failed\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n            exit 1\n        fi\n    else\n        echo \"  ✓ Using existing KRaft storage directory\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    fi\n\n    # starts kafka\n    echo \"\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    echo \"Starting Kafka $KAFKA_MODE service...\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    echo \"  - Node ID: $KAFKA_NODE_ID\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    echo \"  - Host: $KAFKA_HOST\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    \n    if [ \"$KAFKA_MODE\" = \"kraft-controller\" ]; then\n        echo \"  - Controller Port: $KRAFT_CONTROLLER_PORT\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        echo \"  - Quorum: $CONTROLLER_QUORUM\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    elif [ \"$KAFKA_MODE\" = \"kraft-broker\" ]; then\n        echo \"  - Broker Port: $KAFKA_PORT\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        echo \"  - Controller Quorum: $CONTROLLER_QUORUM\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    else  # kraft-combined\n        echo \"  - Broker Port: $KAFKA_PORT\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n        echo \"  - Controller Port: $KRAFT_CONTROLLER_PORT\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    fi\n    \n    echo \"  - Data directory: $KAFKA_DATA_DIR\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    echo \"  - Config file: $KAFKA_CONFIG_DIR/kraft.properties\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    echo \"\" | tee -a \"$FLOX_ENV_CACHE/kafka-logs/startup.log\"\n    \n    # Explicitly set all needed env vars when starting kafka\n    exec env KAFKA_CLUSTER_ID=\"$KAFKA_CLUSTER_ID\" \\\n             KAFKA_NODE_ID=\"$KAFKA_NODE_ID\" \\\n             KAFKA_HOST=\"$KAFKA_HOST\" \\\n             KAFKA_PORT=\"$KAFKA_PORT\" \\\n             KAFKA_DATA_DIR=\"$KAFKA_DATA_DIR\" \\\n             KRAFT_CONTROLLER_PORT=\"$KRAFT_CONTROLLER_PORT\" \\\n             KAFKA_CONFIG_DIR=\"$KAFKA_CONFIG_DIR\" \\\n             KAFKA_LOG_DIR=\"$KAFKA_LOG_DIR\" \\\n             JAVA_HOME=\"$JAVA_HOME\" \\\n             kafka-server-start.sh \"$KAFKA_CONFIG_DIR/kraft.properties\"\nfi\n"
      }
    }
  },
  "packages": [
    {
      "attr_path": "coreutils",
      "broken": false,
      "derivation": "/nix/store/1nwy6zrysrzrxzlnjsvlbqj063wvzj6g-coreutils-9.6.drv",
      "description": "GNU Core Utilities",
      "install_id": "coreutils",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "coreutils-9.6",
      "pname": "coreutils",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:22.225687Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "9.6",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/0bw9z4w1ji3p4s3fkiazsyjg2l44m37v-coreutils-9.6-debug",
        "info": "/nix/store/4fsz8fn9m2v325zwbbn8w6dkjxrgnssz-coreutils-9.6-info",
        "out": "/nix/store/zfwaliz66856jv0dm10b2miy1krnx5p7-coreutils-9.6"
      },
      "system": "aarch64-linux",
      "group": "darwin-tools",
      "priority": 5
    },
    {
      "attr_path": "coreutils",
      "broken": false,
      "derivation": "/nix/store/d9qg08k6sqm81863f9j897dac9wbq7c6-coreutils-9.6.drv",
      "description": "GNU Core Utilities",
      "install_id": "coreutils",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "coreutils-9.6",
      "pname": "coreutils",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:16.837255Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "9.6",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/pq5ffz4lgybwy1g4apkrxgjazh0xpy0g-coreutils-9.6-debug",
        "info": "/nix/store/i60bl9mvpn32ch312p0bll6455swb1aa-coreutils-9.6-info",
        "out": "/nix/store/h5rn37dd6vfvr9xb0jq85sq8hf6xchry-coreutils-9.6"
      },
      "system": "x86_64-linux",
      "group": "darwin-tools",
      "priority": 5
    },
    {
      "attr_path": "coreutils",
      "broken": false,
      "derivation": "/nix/store/kh1np1jqnb1bzz8yl4jax6h5ydz0f2ws-coreutils-9.6.drv",
      "description": "GNU Core Utilities",
      "install_id": "coreutils",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "coreutils-9.6",
      "pname": "coreutils",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:42.190731Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "9.6",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "info": "/nix/store/h1jw31m6jii5kndx3sxqn79wlppa3gqn-coreutils-9.6-info",
        "out": "/nix/store/r9y8p97lcpm3kn03jsp157qr3kjhbxyh-coreutils-9.6"
      },
      "system": "aarch64-darwin",
      "group": "darwin-tools",
      "priority": 5
    },
    {
      "attr_path": "coreutils",
      "broken": false,
      "derivation": "/nix/store/yl58iny131vn566j3w2jjc0rwircyaqi-coreutils-9.6.drv",
      "description": "GNU Core Utilities",
      "install_id": "coreutils",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "coreutils-9.6",
      "pname": "coreutils",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:39.342895Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "9.6",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "info": "/nix/store/pxnmw7x46594xkwx8x75sjk6wn5p37p4-coreutils-9.6-info",
        "out": "/nix/store/4zj8zn4r000ydbm1nv3lyr6dfqkgcbmw-coreutils-9.6"
      },
      "system": "x86_64-darwin",
      "group": "darwin-tools",
      "priority": 5
    },
    {
      "attr_path": "gawk",
      "broken": false,
      "derivation": "/nix/store/5y5hiji7rmbdawyc55dhx2nl2imj6q9j-gawk-5.3.1.drv",
      "description": "GNU implementation of the Awk programming language",
      "install_id": "gawk",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gawk-5.3.1",
      "pname": "gawk",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:22.981097Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "5.3.1",
      "outputs_to_install": [
        "man",
        "out"
      ],
      "outputs": {
        "info": "/nix/store/b85wijgg7hkc5pp4m20jqdwzhs1z35n4-gawk-5.3.1-info",
        "man": "/nix/store/8gl2g82iy368gmwl915valgdayvh05cj-gawk-5.3.1-man",
        "out": "/nix/store/2bqdjg0cd39065pyra02c55xcq6mns95-gawk-5.3.1"
      },
      "system": "aarch64-linux",
      "group": "darwin-tools",
      "priority": 5
    },
    {
      "attr_path": "gawk",
      "broken": false,
      "derivation": "/nix/store/3q19lx413z1lcsimbjyby00lx6rd7bfs-gawk-5.3.1.drv",
      "description": "GNU implementation of the Awk programming language",
      "install_id": "gawk",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gawk-5.3.1",
      "pname": "gawk",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:17.681221Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "5.3.1",
      "outputs_to_install": [
        "man",
        "out"
      ],
      "outputs": {
        "info": "/nix/store/4n2af8zgwp8ldkrxjarhii8zqznbqyb4-gawk-5.3.1-info",
        "man": "/nix/store/iv3c03ygjfh4f7x0d61b7x8m71zlqghl-gawk-5.3.1-man",
        "out": "/nix/store/qi25cvn9j1xyvl9p7lp8nw9wqk5k648r-gawk-5.3.1"
      },
      "system": "x86_64-linux",
      "group": "darwin-tools",
      "priority": 5
    },
    {
      "attr_path": "gawk",
      "broken": false,
      "derivation": "/nix/store/0swii45nakd7jgq5q6nsn14c6vivxk32-gawk-5.3.1.drv",
      "description": "GNU implementation of the Awk programming language",
      "install_id": "gawk",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gawk-5.3.1",
      "pname": "gawk",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:42.581298Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "5.3.1",
      "outputs_to_install": [
        "man",
        "out"
      ],
      "outputs": {
        "info": "/nix/store/9c17rg59qkvg8qrgsv8c2l3fpvrqlg8r-gawk-5.3.1-info",
        "man": "/nix/store/r6my8drvarl15wcbpxr0zl36sj9c92di-gawk-5.3.1-man",
        "out": "/nix/store/w7m7ys9nqgwqf0h2rwcw50vhgyysqhv0-gawk-5.3.1"
      },
      "system": "aarch64-darwin",
      "group": "darwin-tools",
      "priority": 5
    },
    {
      "attr_path": "gawk",
      "broken": false,
      "derivation": "/nix/store/5r8rscndakqpwpgi9gqk0vqbgqgbrb5w-gawk-5.3.1.drv",
      "description": "GNU implementation of the Awk programming language",
      "install_id": "gawk",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gawk-5.3.1",
      "pname": "gawk",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:39.736009Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "5.3.1",
      "outputs_to_install": [
        "man",
        "out"
      ],
      "outputs": {
        "info": "/nix/store/zjfkgmq5zrfr313h7vza8w73kj1lpmcr-gawk-5.3.1-info",
        "man": "/nix/store/ydwn41jgqj9cr8f3ywkfd8v0dmyvrr2a-gawk-5.3.1-man",
        "out": "/nix/store/a57qq11ahngvyn4wdy2c21b4yrli177f-gawk-5.3.1"
      },
      "system": "x86_64-darwin",
      "group": "darwin-tools",
      "priority": 5
    },
    {
      "attr_path": "gnugrep",
      "broken": false,
      "derivation": "/nix/store/hhj7q7s8g2bfczvlbrfi3abkhbnw0d4l-gnugrep-3.11.drv",
      "description": "GNU implementation of the Unix grep command",
      "install_id": "gnugrep",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gnugrep-3.11",
      "pname": "gnugrep",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:23.461538Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.11",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "info": "/nix/store/drdxz5p29n4m01464lm4krn6hb3vh4pn-gnugrep-3.11-info",
        "out": "/nix/store/g6xzw8ig9afmwl91ql2q06gignjrv67a-gnugrep-3.11"
      },
      "system": "aarch64-linux",
      "group": "gnugrep",
      "priority": 5
    },
    {
      "attr_path": "gnugrep",
      "broken": false,
      "derivation": "/nix/store/ijl51lmjqydk0lbhixs7jwcwl892lw63-gnugrep-3.11.drv",
      "description": "GNU implementation of the Unix grep command",
      "install_id": "gnugrep",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gnugrep-3.11",
      "pname": "gnugrep",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:18.244870Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.11",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "info": "/nix/store/z1vq2h25hmb1mwsvpg9cw8zaf73jpx9s-gnugrep-3.11-info",
        "out": "/nix/store/8i12gp78n1m9z794miwbsclgyyp5nm5s-gnugrep-3.11"
      },
      "system": "x86_64-linux",
      "group": "gnugrep",
      "priority": 5
    },
    {
      "attr_path": "gnugrep",
      "broken": false,
      "derivation": "/nix/store/w3vjc0a4z6azmfq946v3dcfqh6xcmdcw-gnugrep-3.11.drv",
      "description": "GNU implementation of the Unix grep command",
      "install_id": "gnugrep",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gnugrep-3.11",
      "pname": "gnugrep",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:42.720210Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.11",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "info": "/nix/store/hcb9ayahnrkjdp19cybanwq5l0jac0kz-gnugrep-3.11-info",
        "out": "/nix/store/vyfs7l798mabb0kqw5v7xk87mzjn3d3x-gnugrep-3.11"
      },
      "system": "aarch64-darwin",
      "group": "gnugrep",
      "priority": 5
    },
    {
      "attr_path": "gnugrep",
      "broken": false,
      "derivation": "/nix/store/7g1nkqc5sprn1k97qmbfi2vka8ir1hp8-gnugrep-3.11.drv",
      "description": "GNU implementation of the Unix grep command",
      "install_id": "gnugrep",
      "license": "GPL-3.0-or-later",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gnugrep-3.11",
      "pname": "gnugrep",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:39.905376Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.11",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "info": "/nix/store/h3dyjzs9y34g3mycmifx9rfi35pv75gv-gnugrep-3.11-info",
        "out": "/nix/store/w006g66vssk3hhgv7vm23fmnazqyd9rl-gnugrep-3.11"
      },
      "system": "x86_64-darwin",
      "group": "gnugrep",
      "priority": 5
    },
    {
      "attr_path": "bat",
      "broken": false,
      "derivation": "/nix/store/x34py05hr9kbqq3v7yj1w5rbrd7lj2hc-bat-0.25.0.drv",
      "description": "Cat(1) clone with syntax highlighting and Git integration",
      "install_id": "bat",
      "license": "[ Apache-2.0, MIT ]",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "bat-0.25.0",
      "pname": "bat",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:21.880660Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.25.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/aqpwblil73wrjvjckhagjdwbbj8y6qpm-bat-0.25.0"
      },
      "system": "aarch64-linux",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "bat",
      "broken": false,
      "derivation": "/nix/store/y2b64irmqc3qmlzjqc3r8r6imclfbiii-bat-0.25.0.drv",
      "description": "Cat(1) clone with syntax highlighting and Git integration",
      "install_id": "bat",
      "license": "[ Apache-2.0, MIT ]",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "bat-0.25.0",
      "pname": "bat",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:16.441436Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.25.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/znb9lva77lsydvmy3ra1h0ilzm4fgkgc-bat-0.25.0"
      },
      "system": "x86_64-linux",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "bat",
      "broken": false,
      "derivation": "/nix/store/zv04rfzmqbkibdxai2jzqykgc7l245df-bat-0.25.0.drv",
      "description": "Cat(1) clone with syntax highlighting and Git integration",
      "install_id": "bat",
      "license": "[ Apache-2.0, MIT ]",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "bat-0.25.0",
      "pname": "bat",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:41.922348Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.25.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/29xjspshldxxsx7ff6fs6n8nz7rwwa0n-bat-0.25.0"
      },
      "system": "aarch64-darwin",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "bat",
      "broken": false,
      "derivation": "/nix/store/h4jyxngwni1w7zzv586c4izw4j6cwiq4-bat-0.25.0.drv",
      "description": "Cat(1) clone with syntax highlighting and Git integration",
      "install_id": "bat",
      "license": "[ Apache-2.0, MIT ]",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "bat-0.25.0",
      "pname": "bat",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:39.088601Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.25.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/zsjjqxpx1m3n1677jsk3viy84rxhh7s5-bat-0.25.0"
      },
      "system": "x86_64-darwin",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "curl",
      "broken": false,
      "derivation": "/nix/store/yq3cgczhqmmrwclib223sw30cv5bjnsp-curl-8.12.1.drv",
      "description": "Command line tool for transferring files with URL syntax",
      "install_id": "curl",
      "license": "curl",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "curl-8.12.1",
      "pname": "curl",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:22.299111Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "8.12.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/hvlljyxp5xzrv719f5j7m7gnyb87mx41-curl-8.12.1-bin",
        "debug": "/nix/store/z8lpvdvih1mspz5j1lsbgagsjpl2wizw-curl-8.12.1-debug",
        "dev": "/nix/store/npbpw2121z4akxngf176q1mdlxfkwv0j-curl-8.12.1-dev",
        "devdoc": "/nix/store/r6kp2rzlm8vfflnzrhsf21b20ixgmpfp-curl-8.12.1-devdoc",
        "man": "/nix/store/cb83qlmflk1w18ndysbbm9hvg053w3f6-curl-8.12.1-man",
        "out": "/nix/store/gy6v84p7iy8p2wy7w0qh56vbqwz446kk-curl-8.12.1"
      },
      "system": "aarch64-linux",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "curl",
      "broken": false,
      "derivation": "/nix/store/c7phcbkl7nzja980jnyy0g1dni8qb782-curl-8.12.1.drv",
      "description": "Command line tool for transferring files with URL syntax",
      "install_id": "curl",
      "license": "curl",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "curl-8.12.1",
      "pname": "curl",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:16.929266Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "8.12.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/16g6gyg131k8vgna13ilb4v9msh5fmi9-curl-8.12.1-bin",
        "debug": "/nix/store/v7kw0dv1r94d7xjknibh53wl8yqwinh8-curl-8.12.1-debug",
        "dev": "/nix/store/0rnns5hhxpvx08p0k3j6bhivj70y6wli-curl-8.12.1-dev",
        "devdoc": "/nix/store/mxjg45wa0ibsyzlilbiiy3hqbpn5zfxw-curl-8.12.1-devdoc",
        "man": "/nix/store/y8h3k07g8hpbs8ifx6vxlbh2kfpl4m65-curl-8.12.1-man",
        "out": "/nix/store/kmq714baxkd5yzpnbp09b7dhnks6m74q-curl-8.12.1"
      },
      "system": "x86_64-linux",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "curl",
      "broken": false,
      "derivation": "/nix/store/vdyh7cx27q7mga5i15cqlkj3rl4q1zm7-curl-8.12.1.drv",
      "description": "Command line tool for transferring files with URL syntax",
      "install_id": "curl",
      "license": "curl",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "curl-8.12.1",
      "pname": "curl",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:42.222157Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "8.12.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/krgqarvv8y1xr2f7z5vxxva3nn7d1x8l-curl-8.12.1-bin",
        "dev": "/nix/store/8rsm3wrn90wm3h9bcr44j2z5g3qlnq8w-curl-8.12.1-dev",
        "devdoc": "/nix/store/mcxbd00pvp9z2p3baqjypiirrnxyqn1i-curl-8.12.1-devdoc",
        "man": "/nix/store/nxxww0dn65fw7aky9zvghsykr0syb8lg-curl-8.12.1-man",
        "out": "/nix/store/r011ii30b9gphcrwppszgv9bnd6d605r-curl-8.12.1"
      },
      "system": "aarch64-darwin",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "curl",
      "broken": false,
      "derivation": "/nix/store/fq1birpdcm24zlsq0hnhq7sbaalyjzj1-curl-8.12.1.drv",
      "description": "Command line tool for transferring files with URL syntax",
      "install_id": "curl",
      "license": "curl",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "curl-8.12.1",
      "pname": "curl",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:39.375004Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "8.12.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/3nm8cgv7xg1qadvgcshmvspmsr7frvp2-curl-8.12.1-bin",
        "dev": "/nix/store/vij71byxpyrpxsyvb6z4vh75hj51la5f-curl-8.12.1-dev",
        "devdoc": "/nix/store/6zf74b4kalqx1653vwsv7vpng113igi7-curl-8.12.1-devdoc",
        "man": "/nix/store/4aphz90jsdfzx5cfzl5nfnml7czswg09-curl-8.12.1-man",
        "out": "/nix/store/fswhs12ddagbw24a1gr0rv7sm7aqj7c1-curl-8.12.1"
      },
      "system": "x86_64-darwin",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "jq",
      "broken": false,
      "derivation": "/nix/store/mf49wmr7dzwax8vncr8gs77lgnajaarx-jq-1.7.1.drv",
      "description": "Lightweight and flexible command-line JSON processor",
      "install_id": "jq",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "jq-1.7.1",
      "pname": "jq",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:24.728267Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "1.7.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/k8if483b70jz7k45v7r3zgpwx600slaz-jq-1.7.1-bin",
        "dev": "/nix/store/l89ym36dx7cr6mxlgxlgzdg9wpi3sfn1-jq-1.7.1-dev",
        "doc": "/nix/store/cy1fhm3bshrpa32ld7vv354hwgd4nxlf-jq-1.7.1-doc",
        "man": "/nix/store/857krxj0db5bri4z9gks0hfgw6bzv9wg-jq-1.7.1-man",
        "out": "/nix/store/vdigqrk4rsyy21wkmcw32np2wg33iq7l-jq-1.7.1"
      },
      "system": "aarch64-linux",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "jq",
      "broken": false,
      "derivation": "/nix/store/pv893078nkchi2flra5cfdl04fv2qzcz-jq-1.7.1.drv",
      "description": "Lightweight and flexible command-line JSON processor",
      "install_id": "jq",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "jq-1.7.1",
      "pname": "jq",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:19.660971Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "1.7.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/3nawavhk39z9p0l87vdpbiarvyirzv01-jq-1.7.1-bin",
        "dev": "/nix/store/g53bmywyp08ppwfcr8i0hilpz2v7vby7-jq-1.7.1-dev",
        "doc": "/nix/store/hf32jpvi9pg899kz18iwnlw57w83kq78-jq-1.7.1-doc",
        "man": "/nix/store/9ym6hfn6id819vmjgffn9lxk980q6xbm-jq-1.7.1-man",
        "out": "/nix/store/2y5zfakdg53hqbac3rnvb72vmllpn9zf-jq-1.7.1"
      },
      "system": "x86_64-linux",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "jq",
      "broken": false,
      "derivation": "/nix/store/kysqbgfgwgifws19mgz09d4044rzl03f-jq-1.7.1.drv",
      "description": "Lightweight and flexible command-line JSON processor",
      "install_id": "jq",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "jq-1.7.1",
      "pname": "jq",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:43.164752Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "1.7.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/d0r880glv6pvpxibssrcl2v7v4sqijfx-jq-1.7.1-bin",
        "dev": "/nix/store/d3w37gvgsapsh612vyy0b0lnjq81bhhd-jq-1.7.1-dev",
        "doc": "/nix/store/31mydlnw005lpaslc5yqgmxy5mfhzs98-jq-1.7.1-doc",
        "man": "/nix/store/51dbhjrpi3dnj3jv9npjk1wvqcjfpz2n-jq-1.7.1-man",
        "out": "/nix/store/kd68ckkv7lqnfb46rk1746mhig0hhpl5-jq-1.7.1"
      },
      "system": "aarch64-darwin",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "jq",
      "broken": false,
      "derivation": "/nix/store/h2pw48h5vwkabjrvq7ff08y6gdfl7dqw-jq-1.7.1.drv",
      "description": "Lightweight and flexible command-line JSON processor",
      "install_id": "jq",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "jq-1.7.1",
      "pname": "jq",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:40.357520Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "1.7.1",
      "outputs_to_install": [
        "bin",
        "man"
      ],
      "outputs": {
        "bin": "/nix/store/d7scikakdayw3xjw8pm55q8j146qwxwd-jq-1.7.1-bin",
        "dev": "/nix/store/h80zvna5sb5klg3q56l22rw2cac35pzm-jq-1.7.1-dev",
        "doc": "/nix/store/v51p982wn5hrjvfprr5h5f7ffakj86iq-jq-1.7.1-doc",
        "man": "/nix/store/giabrd1iawzw666w62n4dw7czs6k580i-jq-1.7.1-man",
        "out": "/nix/store/8fd0arnj59yvp8clz9a14p61dhchp8kk-jq-1.7.1"
      },
      "system": "x86_64-darwin",
      "group": "helper-tools",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/3czfawlla2cp2pr0wmb151w3s3nniqrc-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:23.725965Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/p7f7gana5d3f4rvlal3sz2x8l4g8s5g4-gum-0.16.0"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/4il6pjc1qhn6mhgxfbfbkygy29ymk3j1-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:18.524193Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/kr0rzsgcv41c3qz5cnj7lyrpipcpnmfb-gum-0.16.0"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/j68sh9zv7wl2183chdjh9lyfgirrf82m-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:42.861682Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/8pyjhiwin98a1bcg2l51lv98bz0jw7wq-gum-0.16.0"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "gum",
      "broken": false,
      "derivation": "/nix/store/sfm0cm6sj219zppa4xngzggqbkk3plki-gum-0.16.0.drv",
      "description": "Tasty Bubble Gum for your shell",
      "install_id": "gum",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "gum-0.16.0",
      "pname": "gum",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:40.048219Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "0.16.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/3hfzhy6kp19x03l360mf5k2k8imjg14a-gum-0.16.0"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk",
      "broken": false,
      "derivation": "/nix/store/2xk8jh3qa3d8v8hs7xy8mpwddkmiq3dh-openjdk-21.0.5+11.drv",
      "description": "Open-source Java Development Kit",
      "install_id": "jdk",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "openjdk-21.0.5+11",
      "pname": "jdk",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:24.657230Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "21.0.5+11",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/di3vg628rw8vy5sgfighv4bhag7vcmaw-openjdk-21.0.5+11-debug",
        "out": "/nix/store/1vdnkw9l0iv9jyaqp44p7afb11x94ykx-openjdk-21.0.5+11"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk",
      "broken": false,
      "derivation": "/nix/store/cqzq3qqjgp9rj492m2cj82x8vc3c1py2-openjdk-21.0.5+11.drv",
      "description": "Open-source Java Development Kit",
      "install_id": "jdk",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "openjdk-21.0.5+11",
      "pname": "jdk",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:19.582050Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "21.0.5+11",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/8745ilvhps8wz7b109304xbra9nczpnd-openjdk-21.0.5+11-debug",
        "out": "/nix/store/k7sl9awa4r5i8z3fj8wz90cac1v7s5n7-openjdk-21.0.5+11"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk",
      "broken": false,
      "derivation": "/nix/store/zrjvkhk1hx7mqi5hxi9j6651jqafxwxv-zulu-ca-jdk-21.0.4.drv",
      "description": "Certified builds of OpenJDK",
      "install_id": "jdk",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "zulu-ca-jdk-21.0.4",
      "pname": "jdk",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:43.126803Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "21.0.4",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/36yvq3c4i9qcqhm4n37v5qnk5sqjy5iq-zulu-ca-jdk-21.0.4"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "jdk",
      "broken": false,
      "derivation": "/nix/store/7b5rgvacfjzx8jd24jlmplyz48y9jxx3-zulu-ca-jdk-21.0.4.drv",
      "description": "Certified builds of OpenJDK",
      "install_id": "jdk",
      "license": "GPL-2.0-only",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "zulu-ca-jdk-21.0.4",
      "pname": "jdk",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:40.318708Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "21.0.4",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/dlf455vq9gh7mhdg5h2mvkf87any49g4-zulu-ca-jdk-21.0.4"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "apacheKafka",
      "broken": false,
      "derivation": "/nix/store/8785mvic61sdp4lr7zqkqkm1dxxcgvbm-apache-kafka-2.13-4.0.0.drv",
      "description": "High-throughput distributed messaging system",
      "install_id": "kafka",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "apache-kafka-2.13-4.0.0",
      "pname": "apacheKafka",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:36:21.805940Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "2.13-4.0.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/z40jyzmw39nww09cpgly0hb02iafqkk2-apache-kafka-2.13-4.0.0"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "apacheKafka",
      "broken": false,
      "derivation": "/nix/store/p9i0yd40p0yh79vj3bnvng898jpq0rlj-apache-kafka-2.13-4.0.0.drv",
      "description": "High-throughput distributed messaging system",
      "install_id": "kafka",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "apache-kafka-2.13-4.0.0",
      "pname": "apacheKafka",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T05:14:16.356789Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "2.13-4.0.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/kggi42gkbl6pf5knq7dvadjba76ncx9l-apache-kafka-2.13-4.0.0"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "apacheKafka",
      "broken": false,
      "derivation": "/nix/store/7w5wdh7gkv80ygssbmrlb3s9nzpmp1a1-apache-kafka-2.13-4.0.0.drv",
      "description": "High-throughput distributed messaging system",
      "install_id": "kafka",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "apache-kafka-2.13-4.0.0",
      "pname": "apacheKafka",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:18:41.863140Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "2.13-4.0.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/rsih9kb17h5srswmlqp65dfvgia835qk-apache-kafka-2.13-4.0.0"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "apacheKafka",
      "broken": false,
      "derivation": "/nix/store/4h6nl21dm23gk28qjg00zsvghwvzibi9-apache-kafka-2.13-4.0.0.drv",
      "description": "High-throughput distributed messaging system",
      "install_id": "kafka",
      "license": "Apache-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=f771eb401a46846c1aebd20552521b233dd7e18b",
      "name": "apache-kafka-2.13-4.0.0",
      "pname": "apacheKafka",
      "rev": "f771eb401a46846c1aebd20552521b233dd7e18b",
      "rev_count": 789333,
      "rev_date": "2025-04-24T20:20:57Z",
      "scrape_date": "2025-04-27T04:53:39.034318Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "2.13-4.0.0",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/07vxiy0qq0y0ivsiax7k8syfg3bqkn4x-apache-kafka-2.13-4.0.0"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    }
  ]
}